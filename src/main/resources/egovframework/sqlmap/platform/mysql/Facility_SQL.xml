<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="Facility">
	
	<typeAlias  alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	<typeAlias  alias="facilitySerarchVO" type="com.danusys.platform.west.service.FacilityVO"/>
	<typeAlias  alias="lastsVO" type="com.danusys.platform.sensor.service.LastsVO"/>
	
	<select id="facilityDAO.selectFacilityList" parameterClass="facilitySerarchVO" resultClass="egovMap">
			SELECT seq_no
				 , cctv_nm
				 , node_ip
				 , node_id
				 , node_port
				 , mng_cd
				 , (SELECT code_nm FROM platform_code WHERE code_group = 'CCTV' AND code_cd = purpose) purpose
				 , PTZ_gbn
				 , encrypt_latitude latitude
				 , encrypt_longitude longitude
				 , inst_id
				 , inst_de
				 , upd_id
				 , upd_de
				 , (6371*acos(cos(radians(#encryptLatitude#))*cos(radians(encrypt_latitude))*cos(radians(encrypt_longitude)
					-radians(#encryptLongitude#))+sin(radians(#encryptLatitude#))*sin(radians(encrypt_latitude))))
					AS distance
			FROM facility
			WHERE 1=1
			<isEmpty property = "flag">
				<isNotEmpty property = "totSearch">
				AND (CONCAT(IFNULL(cctv_nm,''),IFNULL(mng_cd,''),IFNULL(node_ip,''),IFNULL((SELECT code_nm FROM platform_code WHERE code_group = 'CCTV' AND code_cd = purpose),''))
					LIKE CONCAT('%',#totSearch#,'%'))
				</isNotEmpty>
			ORDER BY inst_id desc
			</isEmpty>
			<isNotEmpty property = "flag">
			HAVING 1 >= distance
			ORDER BY distance
			</isNotEmpty>
			<isNotEqual property="recordCountPerPage" compareValue="-1">
			LIMIT #firstIndex#, #recordCountPerPage#
			</isNotEqual>
	</select>
	<select id="facilityDAO.selectFacilityListTotCnt" parameterClass="facilitySerarchVO" resultClass="int">
			SELECT COUNT(*) totcnt
			FROM (
				SELECT *
					 , (6371*acos(cos(radians(#encryptLatitude#))*cos(radians(encrypt_latitude))*cos(radians(encrypt_longitude)
						-radians(#encryptLongitude#))+sin(radians(#encryptLatitude#))*sin(radians(encrypt_latitude))))
						AS distance
				FROM facility
				WHERE 1=1
				<isEmpty property = "flag">
					<isNotEmpty property = "totSearch">
					AND (CONCAT(IFNULL(cctv_nm,''),IFNULL(mng_cd,''),IFNULL(node_ip,''),IFNULL((SELECT code_nm FROM platform_code WHERE code_group = 'CCTV' AND code_cd = purpose),''))
						LIKE CONCAT('%',#totSearch#,'%'))
					</isNotEmpty>
				</isEmpty>
				<isNotEmpty property = "flag">
				HAVING 1 >= distance
				</isNotEmpty>
			) A
	</select>
	
	<!-- node id로 시설물을 찾는다. -->
	<select id="facilityDAO.selectFacilityToNodeId" parameterClass="facilitySerarchVO" resultClass="egovMap">
			SELECT seq_no
				 , cctv_nm
				 , node_ip
				 , node_id
				 , node_port
				 , mng_cd
				 , purpose
				 , PTZ_gbn
				 , encrypt_latitude
				 , encrypt_longitude
				 , inst_id
				 , inst_de
				 , upd_id
				 , upd_de
			FROM facility
			WHERE node_id = #nodeId#
	</select>
	
	<!-- siteno로 시설물을 찾는다.(환경센서와 연결되 카메라정보) -->
	<select id="facilityDAO.selectFacilityToSiteno" parameterClass="lastsVO" resultClass="egovMap">
	    	SELECT *
			FROM facility f 
			WHERE f.node_id = 
				(SELECT node_id FROM sensor WHERE siteno=#siteno#);
	</select>
	
	<!-- 반경 1km 안에 있는 시설물을 찾는다. -->
	<select id="facilityDAO.selectFacilityRadius" parameterClass="facilitySerarchVO" resultClass="egovMap">
		<![CDATA[
			SELECT *
				 , (6371*acos(cos(radians(#encryptLatitude#))*cos(radians(encrypt_latitude))*cos(radians(encrypt_longitude)
					-radians(#encryptLongitude#))+sin(radians(#encryptLatitude#))*sin(radians(encrypt_latitude))))
					AS distance
			FROM facility
			HAVING distance <= 1
			ORDER BY distance 
			LIMIT 0,6
		]]>
	</select>
	
	<insert id="facilityDAO.insertFacility">
		<![CDATA[
			INSERT INTO facility 
				( cctv_nm
				  , node_ip
				  , node_id
				  , node_port
				  , mng_cd
				  , purpose
				  , PTZ_gbn
				  , encrypt_latitude
				  , encrypt_longitude
				  , inst_id
				  , inst_de
				  , upd_id
				  , upd_de )
			VALUES ( #cctvNm#
				  , #nodeIp#
				  , #nodeId#
				  , #nodePort#
				  , #mngCd#
				  , #purpose#
				  , #PTZGbn#
				  , #encryptLatitude#
				  , #encryptLongitude#
				  , #instId#
				  , now()
				  , #instId#
				  , now() )
		]]>
	</insert>
	
	<!-- <update id="facilityDAO.updateFacility">
		<![CDATA[
			UPDATE facility
			SET cctv_nm=#cctvNm#
				, node_ip=#nodeIp#
				, node_id=#nodeId#
				, node_port=#nodePort#
				, mng_cd=#mngCd#
				, purpose=#purpose#
				, PTZ_gbn=#PTZGbn#
				, encrypt_latitude=#encryptLatitude#
				, encrypt_longitude=#encryptLongitude#
				, inst_id=#instId#
				, inst_de=#instDe#
				, upd_id=#updId#
				, upd_de=now()
			]]>
	</update> -->
	
	<!--  -->
	<insert id="facilityDAO.insertFacilityDuplicateUpdate">
        <![CDATA[
            INSERT INTO facility 
                ( cctv_nm
                  , node_ip
                  , node_id
                  , node_port
                  , mng_cd
                  , inst_id
                  , inst_de
                  , upd_id
                  , upd_de )
            VALUES ( #cctvNm#
                  , #nodeIp#
                  , #nodeId#
                  , #nodePort#
                  , #mngCd#
                  , #instId#
                  , now()
                  , #instId#
                  , now() )
            ON DUPLICATE KEY
                UPDATE cctv_nm=#cctvNm#
                    , node_ip=#nodeIp#
                    , node_port=#nodePort#
                    , mng_cd=#mngCd#
                    , upd_id=#instId#
                    , upd_de=now()
        ]]>
    </insert>
	<!-- node id가 같은 시설물을 찾아서 port number를 업데이트 한다. -->
	<update id="facilityDAO.updateFacilityToNodeId">
		<![CDATA[
			UPDATE facility
			SET node_port=#nodePort#
				, upd_id=#updId#
				, upd_de=now()
			WHERE node_id=#nodeId#
		]]>
	</update>
	
	<delete id="facilityDAO.deleteFacility">
		<![CDATA[
			DELETE FROM notice WHERE seq_no in ]]>
		<iterate property="seqNoList" open="(" close=")" conjunction=",">
			#seqNoList[]#
		</iterate>
	</delete>
	
	<select id="facilityDAO.selectFacilityMList" parameterClass="facilitySerarchVO" resultClass="egovMap">
			SELECT seq_no
				 , facility_type
				 , cctv_nm
				 , node_ip
				 , node_id
				 , node_port
				 , purpose
				 , purpose_nm
				 , latitude
				 , longitude
				 , acpt_ip
				 , acpt_port
				 , acpt_id
				 , acpt_pw
				 , rtsp_url
				 , IF(state=0,'정상','비정상') state
				 , mng_cd
				 , facility_center_gbn
				 , facility_center_place
			FROM (
					SELECT seq_no
						 , 'CCTV' facility_type
						 , cctv_nm
						 , node_ip
						 , node_id
						 , node_port
						 , purpose
						 , (SELECT code_nm FROM platform_code WHERE code_group = 'CCTV' AND code_cd = purpose) purpose_nm
						 , encrypt_latitude latitude
						 , encrypt_longitude longitude
						 , acpt_ip
						 , acpt_port
						 , acpt_id
						 , acpt_pw
						 , rtsp_url
						 , state
						 , mng_cd
						 , '' facility_center_gbn
						 , '' facility_center_place
					FROM facility
					UNION
					SELECT seq_no
						 , 'SENSOR'
						 , name
						 , ''
						 , node_id
						 , ''
						 , 'SENSOR'
						 , '환경센서'
						 , latitude
						 , longitude
						 , ''
						 , ''
						 , ''
						 , ''
						 , ''
						 , state
						 , siteno
						 , ''
						 , ''
					FROM sensor
					UNION
					SELECT seq_no
						 , 'CENTER'
						 , name
						 , ''
						 , ''
						 , ''
						 , purpose
						 , '센터장비'
						 , ''
						 , ''
						 , ''
						 , ''
						 , ''
						 , ''
						 , ''
						 , state
						 , ''
						 , gbn
						 , place
					FROM center_eqpmn
			) A
			WHERE 1=1
			<isNotEmpty property = "facilityType">
			AND facility_type = #facilityType#
			</isNotEmpty>
			<isNotEqual property="recordCountPerPage" compareValue="-1">
			LIMIT #firstIndex#, #recordCountPerPage#
			</isNotEqual>
	</select>
	<select id="facilityDAO.selectFacilityMListTotCnt" parameterClass="facilitySerarchVO" resultClass="int">
			SELECT COUNT(*)
			FROM (
					SELECT seq_no
						 , 'CCTV' facility_type
					FROM facility
					UNION
					SELECT seq_no
						 , 'SENSOR'
					FROM sensor
					UNION
					SELECT seq_no
						 , 'CENTER'
					FROM center_eqpmn
			) A
			WHERE 1=1
			<isNotEmpty property = "facilityGbn">
			AND facility_gbn = #facilityGbn#
			</isNotEmpty>
	</select>
	
	<insert id="facilityDAO.insertFacilityCctvList">
		<![CDATA[
			INSERT INTO facility
			(
				  cctv_nm
				, node_ip
				, node_id
				, node_port
				, mng_cd
				, purpose
				, PTZ_gbn
				, encrypt_latitude
				, encrypt_longitude
				, acpt_ip
				, acpt_port
				, acpt_id
				, acpt_pw
				, rtsp_url
				, rtsp_full_url
				, inst_id
				, inst_de
				, upd_id
				, upd_de
			)
			VALUES
			(
				  #cctvNm#
				, #nodeIp#
				, #nodeId#
				, #nodePort#
				, #mngCd#
				, #purpose#
				, #PTZGbn#
				, if(#latitude#='',null,#latitude#)
				, if(#longitude#='',null,#longitude#)
				, #acptIp#
				, #acptPort#
				, #acptId#
				, #acptPw#
				, #rtspUrl#
				, CONCAT('rtsp://',IFNULL(#acptId#,''),':',IFNULL(#acptPw#,''),'@',IFNULL(#acptIp#,''),':',IFNULL(#acptPort#,''),'/',IFNULL(#rtspUrl#,''))
				, #instId#
				, now()
				, #instId#
				, now()
			)
		]]>
	</insert>
	<insert id="facilityDAO.insertFacilitySensorList">
		<![CDATA[
			INSERT INTO sensor
			(
				  name
				, shape
				, latitude
				, longitude
				, siteno
				, node_id
			)
			VALUES
			(
				  #cctvNm#
				, ST_GeomFromText(CONCAT('POINT(', #longitude#, ' ', #latitude#, ')'))
				, #latitude#
				, #longitude#
				, #mngCd#
				, #nodeId#
			)
		]]>
	</insert>
	<insert id="facilityDAO.insertFacilityCenterList">
		<![CDATA[
			INSERT INTO center_eqpmn
			(
				  name
				, inst_id
				, inst_de
				, upd_id
				, upd_de
			)
			VALUES
			(
				  #cctvNm#
				, #instId#
				, now()
				, #instId#
				, now()
			)
		]]>
	</insert>
	
	<update id="facilityDAO.updateFacilityCctvList">
		<![CDATA[
			UPDATE facility
			SET cctv_nm=#cctvNm#
				, node_ip=#nodeIp#
				, node_id=#nodeId#
				, node_port=#nodePort#
				, mng_cd=#mngCd#
				, purpose=#purpose#
				, PTZ_gbn=#PTZGbn#
				, encrypt_latitude=#latitude#
				, encrypt_longitude=#longitude#
				, acpt_ip=#acptIp#
				, acpt_port=#acptPort#
				, acpt_id=#acptId#
				, acpt_pw=#acptPw#
				, rtsp_url=#rtspUrl#
				, rtsp_full_url=CONCAT('rtsp://',IFNULL(#acptId#,''),':',IFNULL(#acptPw#,''),'@',IFNULL(#acptIp#,''),':',IFNULL(#acptPort#,''),'/',IFNULL(#rtspUrl#,''))
				, upd_id=#updId#
				, upd_de=now()
			WHERE seq_no=#seqNo#
		]]>
	</update>
	<update id="facilityDAO.updateFacilitySensorList">
		<![CDATA[
			UPDATE sensor
			SET name=#cctvNm#
				, shape= ST_GeomFromText(CONCAT('POINT(', #longitude#, ' ', #latitude#, ')'))
				, latitude=#latitude#
				, longitude=#longitude#
				, siteno=#mngCd#
				, node_id=#nodeId#
			WHERE seq_no=#seqNo#
		]]>
	</update>
	<update id="facilityDAO.updateFacilityCenterList">
		<![CDATA[
			UPDATE center_eqpmn
			SET modl_nm=#cctvNm#
				
				, upd_id=#updId#
				, upd_de=now()
			WHERE seq_no=#seqNo#
		]]>
	</update>
	
	<delete id="facilityDAO.deleteFacilityCctvList">
		<![CDATA[
			DELETE FROM facility WHERE seq_no=#seqNo#
		]]>
	</delete>
	<delete id="facilityDAO.deleteFacilitySensorList">
		<![CDATA[
			DELETE FROM sensor WHERE seq_no=#seqNo#
		]]>
	</delete>
	<delete id="facilityDAO.deleteFacilityCenterList">
		<![CDATA[
			DELETE FROM center_eqpmn WHERE seq_no=#seqNo#
		]]>
	</delete>
	
	<select id="facilityDAO.selectFacilityRTotList" parameterClass="facilitySerarchVO" resultClass="egovMap">
		<![CDATA[
			SELECT '전체' facility_gbn
				 , COUNT(*) tot_cnt
				 , COUNT(IF(state=0,state,null)) normal_cnt
				 , COUNT(IF(state<>0,state,null)) error_cnt
				 , 0 un_cnt
			FROM (
					SELECT seq_no
						 , 'CCTV' facility_gbn
						 , cctv_nm
						 , node_ip
						 , node_id
						 , node_port
						 , (SELECT code_nm FROM platform_code WHERE code_group = 'CCTV' AND code_cd = purpose) purpose
						 , encrypt_latitude latitude
						 , encrypt_longitude longitude
						 , state
					FROM facility
					UNION
					SELECT seq_no
						 , 'SENSOR'
						 , name
						 , ''
						 , node_id
						 , ''
						 , '환경센서'
						 , latitude
						 , longitude
						 , state
					FROM sensor
					UNION
					SELECT seq_no
						 , 'CENTER'
						 , eqpmn_cd
						 , ''
						 , ''
						 , ''
						 , '센터장비'
						 , ''
						 , ''
						 , state
					FROM center_eqpmn
			) A
			WHERE 1=1
		]]>
	</select>
	
	<select id="facilityDAO.selectFacilityRTypeList" parameterClass="facilitySerarchVO" resultClass="egovMap">
		<![CDATA[
			SELECT facility_gbn
				 , COUNT(*) tot_cnt
				 , COUNT(IF(state=0,state,null)) normal_cnt
				 , COUNT(IF(state<>0,state,null)) error_cnt
				 , 0 un_cnt
			FROM (
					SELECT seq_no
						 , 'CCTV' facility_gbn
						 , cctv_nm
						 , node_ip
						 , node_id
						 , node_port
						 , (SELECT code_nm FROM platform_code WHERE code_group = 'CCTV' AND code_cd = purpose) purpose
						 , encrypt_latitude latitude
						 , encrypt_longitude longitude
						 , state
					FROM facility
					UNION
					SELECT seq_no
						 , 'SENSOR'
						 , name
						 , ''
						 , node_id
						 , ''
						 , '환경센서'
						 , latitude
						 , longitude
						 , state
					FROM sensor
					UNION
					SELECT seq_no
						 , 'CENTER'
						 , eqpmn_cd
						 , ''
						 , ''
						 , ''
						 , '센터장비'
						 , ''
						 , ''
						 , state
					FROM center_eqpmn
			) A
			WHERE 1=1
			GROUP BY facility_gbn
		]]>
	</select>
</sqlMap>
