<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="girlSafe">
	<select id="getUserList" parameterType="map" resultType="HashMap">
		<![CDATA[
		SELECT @ROWNUM := @ROWNUM + 1 AS num,ac.* FROM
		(
		SELECT aa.*,(CASE @vphonenumber WHEN aa.phoneNumber THEN @rowsnum:=@rowsnum+1 ELSE @rowsnum:=1 END) cntNum, 
		(@vphonenumber:=aa.phoneNumber) vphonenumber 
		FROM
		(
	       SELECT 
	    ]]>
	   			CAST(AES_DECRYPT(UNHEX(a.ENCRYPT_NAME), 'aycctv!1808')AS CHAR) as name,
	    <![CDATA[
	    		CONCAT(date_format(a.BIRTH,'%Y-%m-%d'),' (',(YEAR(NOW())-LEFT(a.BIRTH,4)+1),'세)') as birthAge,
	    		CASE LENGTH(a.PHONE_NUMBER)
					WHEN 11 THEN CONCAT(SUBSTR(a.PHONE_NUMBER,1,3),'-',SUBSTR(a.PHONE_NUMBER,4,4),'-',SUBSTR(a.PHONE_NUMBER,8,4))
					WHEN 10 THEN CONCAT(SUBSTR(a.PHONE_NUMBER,1,3),'-',SUBSTR(a.PHONE_NUMBER,4,3),'-',SUBSTR(a.PHONE_NUMBER,7,4))
					ELSE a.PHONE_NUMBER
				END phoneNumber,
				]]>
				CAST(AES_DECRYPT(UNHEX(a.ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) as address,
				<![CDATA[
				CASE a.APPROVAL
					WHEN 'N' THEN '비승인'
					WHEN 'Y' THEN '승인'
				END as approval,
				b.SMART_ID as smartId,
				b.SENSOR_ID as sensorId,				
				CASE b.STATUS
					WHEN '0' THEN '정상'
					WHEN '1' THEN '비정상'
				END as status,
				CASE b.SMART_CONN
					WHEN '0' THEN '미연결'
					WHEN '1' THEN '연결'
				END as smartConnKr,
				CASE b.SENSOR_CONN
					WHEN '0' THEN '미연결'
					WHEN '1' THEN '연결'
				END as sensorConnKr,
				b.STATUS as chkStatus,
				b.BAT as bat,
				CASE b.BAT
					WHEN '0' THEN '좋음'
					WHEN '1' THEN '양호'
					WHEN '2' THEN '나쁨'
				END as krBat,
				b.SENSOR_CONN as sensorConn,
				b.SMART_CONN as smartConn,
				b.BAT as chkBat,
				b.EMERGENCY as emergency,
				b.POINT_X as pointX,
				b.POINT_Y as pointY,
				b.M_POINT_X as mPointX,
				b.M_POINT_Y as mPointY,
				date_format(a.INSERT_DATE,'%Y-%m-%d %H:%i:%s')as insertDate,
				date_format(a.UPDATE_DATE,'%Y-%m-%d %H:%i:%s') as updateDate,
				CASE LENGTH(CAST(AES_DECRYPT(UNHEX(c.S_PHONE_NUMBER), 'aycctv!1808')AS CHAR))
					WHEN 11 THEN CONCAT(SUBSTR(CAST(AES_DECRYPT(UNHEX(c.S_PHONE_NUMBER), 'aycctv!1808')AS CHAR),1,3),'-',SUBSTR(CAST(AES_DECRYPT(UNHEX(c.S_PHONE_NUMBER), 'aycctv!1808')AS CHAR),4,4),'-',SUBSTR(CAST(AES_DECRYPT(UNHEX(c.S_PHONE_NUMBER), 'aycctv!1808')AS CHAR),8,4))
					WHEN 10 THEN CONCAT(SUBSTR(CAST(AES_DECRYPT(UNHEX(c.S_PHONE_NUMBER), 'aycctv!1808')AS CHAR),1,3),'-',SUBSTR(CAST(AES_DECRYPT(UNHEX(c.S_PHONE_NUMBER), 'aycctv!1808')AS CHAR),4,3),'-',SUBSTR(CAST(AES_DECRYPT(UNHEX(c.S_PHONE_NUMBER), 'aycctv!1808')AS CHAR),7,4))
					ELSE CAST(AES_DECRYPT(UNHEX(c.S_PHONE_NUMBER), 'aycctv!1808')AS CHAR)
				END sPhoneNumber
			FROM girl_safe_user a
	        JOIN girl_safe_hw b
	        ON a.PHONE_NUMBER = b.PHONE_NUMBER
	        LEFT JOIN girl_safe_user_sub c
	        ON a.PHONE_NUMBER = c.PHONE_NUMBER
	        WHERE 1=1
		]]>
		<if test="emergency != null and emergency != ''">
			AND b.EMERGENCY = #{emergency}
		</if>
		<if test="hwStatus != null and hwStatus != ''">
			AND b.STATUS = #{hwStatus}
		</if>
		<if test="batStatus != null and batStatus != ''">
			AND b.BAT = #{batStatus}
		</if>
		<if test="userTimeS != null and userTimeS != ''">
		<![CDATA[
			AND date_format(a.INSERT_DATE,'%Y-%m-%d') >= #{userTimeS}
		]]>
		</if>
		<if test="userTimeE != null and userTimeE != ''">
	    <![CDATA[
	    	AND date_format(a.INSERT_DATE,'%Y-%m-%d') <= #{userTimeE}
	    ]]>
		</if>
		<if test="searchType != null and searchType != '' and totSearch != ''">
			<choose>
				<when test="searchType == 'name'">
					AND CAST(AES_DECRYPT(UNHEX(a.ENCRYPT_NAME), 'aycctv!1808')AS CHAR) LIKE CONCAT('%', #{totSearch},
					'%')
				</when>
				<when test="searchType == 'age'">
					AND YEAR(NOW())-LEFT(a.BIRTH,4)+1 = #{totSearch}
				</when>
				<when test="searchType == 'adres'">
					AND CAST(AES_DECRYPT(UNHEX(a.ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) LIKE CONCAT('%', #{totSearch},
					'%')
				</when>
				<when test="searchType == 'phon'">
					AND a.PHONE_NUMBER LIKE CONCAT('%', #{totSearch},
					'%')
				</when>
				<when test="searchType == 'sensor'">
					AND b.SENSOR_ID LIKE CONCAT('%', #{totSearch}, '%')
				</when>
				<when test="searchType == 'smart'">
					AND b.SMART_ID LIKE CONCAT('%', #{totSearch}, '%')
				</when>
			</choose>
		</if>
		<if test="lastTimeS != null and lastTimeS != ''">
	    <![CDATA[
	    	AND date_format(a.UPDATE_DATE,'%Y-%m-%d') >= #{lastTimeS}
	    ]]>
		</if>
		<if test="lastTimeE != null and lastTimeE != ''">
	    <![CDATA[
	    	AND date_format(a.UPDATE_DATE,'%Y-%m-%d') <= #{lastTimeE}
	    ]]>
		</if>
		ORDER BY a.PHONE_NUMBER
		LIMIT 1844674406757864665
		) aa ,
		(SELECT @vphoneNumber:='', @rowsnum:=0 FROM DUAL) ab
		ORDER BY aa.phoneNumber
		)ac 
    	,(SELECT @ROWNUM := #{firstIndex}) R
    	WHERE 1=1
    	AND cntNum='1'
		<if test='recordCountPerPage != -1'>
			LIMIT #{firstIndex}, #{recordCountPerPage}
		</if>
	</select>

	<select id="getUserListCnt" parameterType="map" resultType="String">
		<![CDATA[	
		SELECT count(*) FROM
		(
		SELECT aa.*,(CASE @vphonenumber WHEN aa.PHONE_NUMBER THEN @rowsnum:=@rowsnum+1 ELSE @rowsnum:=1 END) cntNum, 
		(@vphonenumber:=aa.PHONE_NUMBER) vphonenumber 
		FROM
		(		
	         SELECT 
				a.PHONE_NUMBER
			FROM girl_safe_user a
	        JOIN girl_safe_hw b on a.PHONE_NUMBER = b.PHONE_NUMBER
	        LEFT JOIN girl_safe_user_sub c ON a.PHONE_NUMBER = c.PHONE_NUMBER
	       ]]>
	       WHERE 1=1
		<if test="emergency != null and emergency != ''">
			AND b.EMERGENCY = #{emergency}
		</if>
		<if test="hwStatus != null and hwStatus != ''">
			AND b.STATUS = #{hwStatus}
		</if>
		<if test="batStatus != null and batStatus != ''">
			AND b.BAT = #{batStatus}
		</if>
		<if test="userTimeS != null and userTimeS != ''">
		<![CDATA[
			AND date_format(a.INSERT_DATE,'%Y-%m-%d') >= #{userTimeS}
		]]>
		</if>
		<if test="userTimeE != null and userTimeE != ''">
	    <![CDATA[
	    	AND date_format(a.INSERT_DATE,'%Y-%m-%d') <= #{userTimeE}
	    ]]>
		</if>
		<if test="searchType != null and searchType != '' and totSearch != ''">
			<choose>
				<when test="searchType == 'name'">
					AND CAST(AES_DECRYPT(UNHEX(a.ENCRYPT_NAME), 'aycctv!1808')AS CHAR) LIKE CONCAT('%', #{totSearch},
					'%')
				</when>
				<when test="searchType == 'age'">
					AND YEAR(NOW())-LEFT(a.BIRTH,4)+1 = #{totSearch}
				</when>
				<when test="searchType == 'adres'">
					AND CAST(AES_DECRYPT(UNHEX(a.ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) LIKE CONCAT('%', #{totSearch},
					'%')
				</when>
				<when test="searchType == 'phon'">
					AND a.PHONE_NUMBER LIKE CONCAT('%', #{totSearch},
					'%')
				</when>
				<when test="searchType == 'sensor'">
					AND b.SENSOR_ID LIKE CONCAT('%', #{totSearch}, '%')
				</when>
				<when test="searchType == 'smart'">
					AND b.SMART_ID LIKE CONCAT('%', #{totSearch}, '%')
				</when>
			</choose>
		</if>
		<if test="lastTimeS != null and lastTimeS != ''">
	    <![CDATA[
	    	AND date_format(a.UPDATE_DATE,'%Y-%m-%d') >= #{lastTimeS}
	    ]]>
		</if>
		<if test="lastTimeE != null and lastTimeE != ''">
	    <![CDATA[
	    	AND date_format(a.UPDATE_DATE,'%Y-%m-%d') <= #{lastTimeE}
	    ]]>
		</if>
		ORDER BY a.PHONE_NUMBER
		LIMIT 1844674406757864665
		) aa ,
		(SELECT @vphoneNumber:='', @rowsnum:=0 FROM DUAL) ab		
		)ac 
    	,(SELECT @ROWNUM := #{firstIndex}) R
    	WHERE 1=1
    	AND cntNum='1'
	</select>

	<select id="getUser" parameterType="map" resultType="HashMap">
		<![CDATA[
	       SELECT 
	       ]]>
				CAST(AES_DECRYPT(UNHEX(a.ENCRYPT_NAME), 'aycctv!1808')AS CHAR) as name,
				<![CDATA[
				date_format(a.BIRTH,'%Y-%m-%d') as birth,
				a.PHONE_NUMBER as phoneNumber,
				]]>	
				CAST(AES_DECRYPT(UNHEX(a.ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) as address,
				<![CDATA[
				CASE a.APPROVAL
					WHEN 'N' THEN '비승인'
					WHEN 'Y' THEN '승인'
				END as approval,
				b.SMART_ID as smartId,
				b.SENSOR_ID as sensorId,				
				CASE b.STATUS
					WHEN '0' THEN 'ON'
					WHEN '1' THEN 'OFF'
				END as status,
				b.STATUS as chkStatus,
				CASE b.BAT
					WHEN '0' THEN '정상(대)'
					WHEN '1' THEN '정상(중)'
					WHEN '2' THEN '교체필요'
				END as bat,
				b.SENSOR_CONN as sensorConn,
				b.SMART_CONN as smartConn,
				b.BAT as chkBat,
				b.EMERGENCY as emergency,
				b.POINT_X as pointX,
				b.POINT_Y as pointY,
				b.M_POINT_X as mPointX,
				b.M_POINT_Y as mPointY,
				date_format(a.INSERT_DATE,'%Y-%m-%d %H:%i:%s')as insertDate,
				date_format(a.UPDATE_DATE,'%Y-%m-%d %H:%i:%s') as updateDate,
				CAST(AES_DECRYPT(UNHEX(c.S_PHONE_NUMBER), 'aycctv!1808')AS CHAR) as sPhoneNumber
			FROM girl_safe_user a
	        JOIN girl_safe_hw b on a.PHONE_NUMBER = b.PHONE_NUMBER
	        LEFT JOIN girl_safe_user_sub c ON a.PHONE_NUMBER = c.PHONE_NUMBER
	        WHERE 1=1
	    	AND a.PHONE_NUMBER = #{phoneNumber}
	     ]]>
	</select>

	<insert id="insertUser" parameterType="map">
		INSERT INTO girl_safe_user
		(
		PHONE_NUMBER,
		BIRTH,
		ENCRYPT_NAME,
		ENCRYPT_ADRES,
		APPROVAL,
		TOKEN_ID,
		INSERT_DATE,
		UPDATE_DATE
		) VALUES (
		#{phoneNumber},
		#{birth},
		HEX(AES_ENCRYPT(#{name},'aycctv!1808')),
		HEX(AES_ENCRYPT(#{address},'aycctv!1808')),
		'N',
		'',
		NOW(),
		NOW()
		)
		ON DUPLICATE KEY UPDATE
		PHONE_NUMBER = #{phoneNumber},
		BIRTH = #{birth},
		ENCRYPT_NAME = HEX(AES_ENCRYPT(#{name},'aycctv!1808')),
		ENCRYPT_ADRES = HEX(AES_ENCRYPT(#{address},'aycctv!1808')),
		UPDATE_DATE = NOW()
	</insert>
	
	<delete id="deleteUser" parameterType="map">
		DELETE FROM girl_safe_user
		 WHERE PHONE_NUMBER=#{phoneNumber};
	</delete>
	<delete id="deleteHw" parameterType="map">
		DELETE FROM girl_safe_hw
		 WHERE PHONE_NUMBER=#{phoneNumber};
	</delete>
	<delete id="deleteUserSub" parameterType="map">
		DELETE FROM girl_safe_user_sub
		 WHERE PHONE_NUMBER=#{phoneNumber};
	</delete>

	<select id="getHwInfo" parameterType="map" resultType="HashMap">
		SELECT
		a.PHONE_NUMBER as phoneNumber,
		b.SMART_ID as smartId,
		b.SENSOR_ID as sensorId,
		b.EMERGENCY as emergency,
		b.SENSOR_CONN as sensorConn,
		b.SMART_CONN as smartConn,
		b.POINT_X as pointX,
		b.POINT_Y as pointY,
		b.M_POINT_X as mPointX,
		b.M_POINT_Y as mPointY
		FROM girl_safe_user a
		JOIN girl_safe_hw b on a.PHONE_NUMBER = b.PHONE_NUMBER
		WHERE 1=1
		AND	b.SENSOR_ID = #{sensorId}
	</select>

	<select id="getAlarmList" parameterType="map" resultType="HashMap">
		<![CDATA[
	       SELECT
	       @ROWNUM := @ROWNUM + 1 AS num, 
	    ]]>
	   			CAST(AES_DECRYPT(UNHEX(ENCRYPT_NAME), 'aycctv!1808')AS CHAR) as name,
	    <![CDATA[
	    		CASE LENGTH(a.PHONE_NUMBER)
					WHEN 11 THEN CONCAT(SUBSTR(PHONE_NUMBER,1,3),'-',SUBSTR(PHONE_NUMBER,4,4),'-',SUBSTR(PHONE_NUMBER,8,4))
					WHEN 10 THEN CONCAT(SUBSTR(PHONE_NUMBER,1,3),'-',SUBSTR(PHONE_NUMBER,4,3),'-',SUBSTR(PHONE_NUMBER,7,4))
					ELSE a.PHONE_NUMBER
				END phoneNumber,
				SMART_ID as smartId,
				SENSOR_ID as sensorId,
				date_format(START_TIME,'%Y-%m-%d %H:%i:%s')as startTime,
				date_format(END_TIME,'%Y-%m-%d %H:%i:%s') as endTime,
				CASE END_YN
					WHEN 'Y' THEN '미작동'
					WHEN 'N' THEN '작동중'
				END as endYN
			FROM girl_safe_alarm_event a
			,(SELECT @ROWNUM := #{firstIndex}) R
	        WHERE 1=1
		]]>
		<if test="userTimeS != null and userTimeS != ''">
		<![CDATA[
			AND date_format(START_TIME,'%Y-%m-%d') >= #{userTimeS}
		]]>
		</if>
		<if test="userTimeE != null and userTimeE != ''">
	    <![CDATA[
	    	AND date_format(END_TIME,'%Y-%m-%d') <= #{userTimeE}
	    ]]>
		</if>
		<if test="searchType != null and searchType != '' and totSearch != ''">
			<choose>
				<when test="searchType == 'name'">
					AND CAST(AES_DECRYPT(UNHEX(ENCRYPT_NAME), 'aycctv!1808')AS CHAR) LIKE CONCAT('%', #{totSearch},
					'%')
				</when>
				<when test="searchType == 'phon'">
					AND PHONE_NUMBER LIKE CONCAT('%', #{totSearch},
					'%')
				</when>
				<when test="searchType == 'sensor'">
					AND SENSOR_ID LIKE CONCAT('%', #{totSearch}, '%')
				</when>
				<when test="searchType == 'smart'">
					AND SMART_ID LIKE CONCAT('%', #{totSearch}, '%')
				</when>
			</choose>
		</if>
		ORDER BY INSERT_DATE DESC
		<if test='recordCountPerPage != -1'>
			LIMIT #{firstIndex}, #{recordCountPerPage}
		</if>
	</select>
	
	<select id="getAlarmListCnt" parameterType="map" resultType="String">
		<![CDATA[
			SELECT
	      		count(*)
			FROM girl_safe_alarm_event a
	        WHERE 1=1
		]]>
		<if test="userTimeS != null and userTimeS != ''">
		<![CDATA[
			AND date_format(START_TIME,'%Y-%m-%d') >= #{userTimeS}
		]]>
		</if>
		<if test="userTimeE != null and userTimeE != ''">
	    <![CDATA[
	    	AND date_format(END_TIME,'%Y-%m-%d') <= #{userTimeE}
	    ]]>
		</if>
		<if test="searchType != null and searchType != '' and totSearch != ''">
			<choose>
				<when test="searchType == 'name'">
					AND CAST(AES_DECRYPT(UNHEX(ENCRYPT_NAME), 'aycctv!1808')AS CHAR) LIKE CONCAT('%', #{totSearch},
					'%')
				</when>
				<when test="searchType == 'phon'">
					AND PHONE_NUMBER LIKE CONCAT('%', #{totSearch},
					'%')
				</when>
				<when test="searchType == 'sensor'">
					AND SENSOR_ID LIKE CONCAT('%', #{totSearch}, '%')
				</when>
				<when test="searchType == 'smart'">
					AND SMART_ID LIKE CONCAT('%', #{totSearch}, '%')
				</when>
			</choose>
		</if>
	</select>


	<insert id="insertHw" parameterType="map">
		INSERT INTO girl_safe_hw (
		SMART_ID,
		SENSOR_ID,
		PHONE_NUMBER,
		STATUS,
		BAT,
		EMERGENCY,
		SMART_CONN,
		SENSOR_CONN,
		STATUS_TIME,
		SENSOR_ACTION,
		INSERT_DATE,
		UPDATE_DATE
		) VALUES (
		#{smartId},
		#{sensorId},
		#{phoneNumber},
		0,
		0,
		0,
		0,
		0,
		10,
		1,
		NOW(),
		NOW()
		)
		ON DUPLICATE KEY UPDATE
		SMART_ID = #{smartId},
		SENSOR_ID = #{sensorId},
		PHONE_NUMBER = #{phoneNumber},
		UPDATE_DATE = NOW()
	</insert>

	<update id="updateSensorStat" parameterType="map">
		UPDATE girl_safe_hw
		SET
		STATUS=#{status},
		BAT=#{bat},
		<if test="pointX != null">
			POINT_Y=#{pointY},
			POINT_X=#{pointX},
		</if>
		UPDATE_DATE=NOW()
		WHERE SENSOR_ID=#{sensorId};
	</update>

	<update id="updateEmergency" parameterType="map">
		UPDATE girl_safe_hw
		SET
		EMERGENCY=#{emergency},
		<if test="pointX != null">
			POINT_Y=#{pointY},
			POINT_X=#{pointX},
		</if>
		UPDATE_DATE=NOW()
		WHERE SENSOR_ID=#{sensorId};
	</update>

	<update id="updateEventEnd" parameterType="map">
		UPDATE girl_safe_event
		SET
		END_YN = 'Y',
		END_TIME = NOW()
		WHERE NO = #{no}
	</update>

	<update id="updateApproval" parameterType="map">
		UPDATE girl_safe_user
		SET
		APPROVAL='Y',
		UPDATE_DATE=NOW()
		WHERE PHONE_NUMBER=#{phoneNumber};
	</update>

	<select id="getEventList" parameterType="map" resultType="HashMap">
		<![CDATA[		
	       SELECT 
				@ROWNUM := @ROWNUM + 1 AS num,
				NO as no,
				CASE LENGTH(PHONE_NUMBER)
					WHEN 11 THEN CONCAT(SUBSTR(PHONE_NUMBER,1,3),'-',SUBSTR(PHONE_NUMBER,4,4),'-',SUBSTR(PHONE_NUMBER,8,4))
					WHEN 10 THEN CONCAT(SUBSTR(PHONE_NUMBER,1,3),'-',SUBSTR(PHONE_NUMBER,4,3),'-',SUBSTR(PHONE_NUMBER,7,4))
					ELSE PHONE_NUMBER
				END phoneNumber,
				]]>
				CAST(AES_DECRYPT(UNHEX(ENCRYPT_NAME), 'aycctv!1808')AS CHAR) as name,
				<![CDATA[
				CONCAT(date_format(BIRTH,'%Y-%m-%d'),' (',(YEAR(NOW())-LEFT(BIRTH,4)+1),'세)') as birthAge,
				]]>
				CAST(AES_DECRYPT(UNHEX(ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) as address,
				<![CDATA[
				SMART_ID as smartId,
				SENSOR_ID as sensorId,
				DIVISION as division,
				REMARK as remark,
				REASON as reason,
				CASE END_YN
					WHEN 'N' THEN '발생'
					WHEN 'Y' THEN '종료'
				END as endYN,
				POINT_X as pointX,
				POINT_Y as pointY,
				date_format(START_TIME,'%Y-%m-%d %H:%i:%s') as startTime,
				date_format(END_TIME,'%Y-%m-%d %H:%i:%s') as endTime,
				date_format(INSERT_DATE,'%Y-%m-%d %H:%i:%s') as insertDate
			FROM girl_safe_event
	        ,(SELECT @ROWNUM := #{firstIndex}) R 
	        WHERE 1=1
	    ]]>
		<if test="eventTimeS != null and eventTimeS != ''">
	    <![CDATA[
	    	AND date_format(INSERT_DATE,'%Y-%m-%d') >= #{eventTimeS}
	    ]]>
		</if>
		<if test="eventTimeE != null and eventTimeE != ''">
	    <![CDATA[
	    	AND date_format(INSERT_DATE,'%Y-%m-%d') <= #{eventTimeE}
	    ]]>
		</if>
		<if test="endYN != null and endYN != ''">
			AND END_YN = #{endYN}
		</if>
		<if test="searchType != null and searchType != '' and totSearch != ''">
			<choose>
				<when test="searchType == 'name'">
					AND CAST(AES_DECRYPT(UNHEX(ENCRYPT_NAME), 'aycctv!1808')AS CHAR) LIKE CONCAT('%', #{totSearch}, '%')
				</when>
				<when test="searchType == 'age'">
					AND YEAR(NOW())-LEFT(BIRTH,4)+1 = #{totSearch}
				</when>
				<when test="searchType == 'phon'">
					AND PHONE_NUMBER LIKE CONCAT('%', #{totSearch}, '%')
				</when>
				<when test="searchType == 'adres'">
					AND CAST(AES_DECRYPT(UNHEX(ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) LIKE CONCAT('%', #{totSearch}, '%')
				</when>
				<when test="searchType == 'sensor'">
					AND SENSOR_ID LIKE CONCAT('%', #{totSearch}, '%')
				</when>
				<when test="searchType == 'smart'">
					AND SMART_ID LIKE CONCAT('%', #{totSearch}, '%')
				</when>
			</choose>
		</if>
		ORDER BY INSERT_DATE DESC
		<if test='recordCountPerPage != -1'>
			LIMIT #{firstIndex}, #{recordCountPerPage}
		</if>
	</select>

	<select id="getEventListCnt" parameterType="map" resultType="String">
		<![CDATA[		
	       SELECT 
				COUNT(*)
			FROM girl_safe_event a
	        WHERE 1=1
		]]>
		<if test="eventTimeS != null and eventTimeS != ''">
	    <![CDATA[
	    	AND date_format(INSERT_DATE,'%Y-%m-%d') >= #{eventTimeS}
	    ]]>
		</if>
		<if test="eventTimeE != null and eventTimeE != ''">
	    <![CDATA[
	    	AND date_format(INSERT_DATE,'%Y-%m-%d') <= #{eventTimeE}
	    ]]>
		</if>
		<if test="endYN != null and endYN != ''">
			AND END_YN = #{endYN}
		</if>
		<if test="searchType != null and searchType != '' and totSearch != ''">
			<choose>
				<when test="searchType == 'name'">
					AND CAST(AES_DECRYPT(UNHEX(ENCRYPT_NAME), 'aycctv!1808')AS CHAR) LIKE CONCAT('%', #{totSearch}, '%')
				</when>
				<when test="searchType == 'age'">
					AND YEAR(NOW())-LEFT(BIRTH,4)+1 = #{totSearch}
				</when>
				<when test="searchType == 'phon'">
					AND PHONE_NUMBER LIKE CONCAT('%', #{totSearch}, '%')
				</when>
				<when test="searchType == 'adres'">
					AND CAST(AES_DECRYPT(UNHEX(ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) LIKE CONCAT('%', #{totSearch}, '%')
				</when>
				<when test="searchType == 'sensor'">
					AND SENSOR_ID LIKE CONCAT('%', #{totSearch}, '%')
				</when>
			</choose>
		</if>
	</select>
	
	
	<select id="getEventDetail" parameterType="map" resultType="HashMap">
		<![CDATA[		
	       SELECT 
				CASE LENGTH(PHONE_NUMBER)
					WHEN 11 THEN CONCAT(SUBSTR(PHONE_NUMBER,1,3),'-',SUBSTR(PHONE_NUMBER,4,4),'-',SUBSTR(PHONE_NUMBER,8,4))
					WHEN 10 THEN CONCAT(SUBSTR(PHONE_NUMBER,1,3),'-',SUBSTR(PHONE_NUMBER,4,3),'-',SUBSTR(PHONE_NUMBER,7,4))
					ELSE PHONE_NUMBER
				END phoneNumber,
				NO as no,
				]]>
				CAST(AES_DECRYPT(UNHEX(ENCRYPT_NAME), 'aycctv!1808')AS CHAR) as name,
				CAST(AES_DECRYPT(UNHEX(ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) as address,
				<![CDATA[
				date_format(BIRTH,'%Y-%m-%d') as birth,
				SMART_ID as smartId,
				SENSOR_ID as sensorId,
				DIVISION as division,
				REMARK as remark,
				REASON as reason,
				CASE END_YN
					WHEN 'N' THEN '발생'
					WHEN 'Y' THEN '종료'
				END as endYN,
				POINT_X as pointX,
				POINT_Y as pointY,
				date_format(START_TIME,'%Y-%m-%d %H:%i:%s') as startTime,
				date_format(END_TIME,'%Y-%m-%d %H:%i:%s') as endTime,
				date_format(INSERT_DATE,'%Y-%m-%d %H:%i:%s') as insertDate
			FROM girl_safe_event
	        WHERE 1=1
	    	AND NO=#{no}
	    	]]>
	</select>

	<select id="getLastEvent" parameterType="map" resultType="HashMap">
		SELECT
		MAX(NO) as no
		FROM girl_safe_event
		WHERE 1=1
		AND SENSOR_ID = #{sensorId}
	</select>

	<update id="insertEvent" parameterType="map">
		INSERT INTO
		girl_safe_event
		(PHONE_NUMBER, ENCRYPT_NAME, BIRTH, ENCRYPT_ADRES,
		SENSOR_ID, SMART_ID, DIVISION,
		END_YN, POINT_X, POINT_Y, START_TIME,
		END_TIME, INSERT_DATE)
		SELECT
		a.PHONE_NUMBER,
		CAST(AES_DECRYPT(UNHEX(a.ENCRYPT_NAME), 'aycctv!1808')AS CHAR) as name,
		a.BIRTH,
		CAST(AES_DECRYPT(UNHEX(a.ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) as address,
		b.SENSOR_ID,
		b.SMART_ID,
		'SENSOR',
		'0',
		b.POINT_X,
		b.POINT_Y,
		NOW(),
		null,
		NOW()
		FROM girl_safe_user a
		JOIN girl_safe_hw b on
		a.PHONE_NUMBER = b.PHONE_NUMBER
		WHERE b.SENSOR_ID=#{sensorId};
	</update>

	<select id="getBoardList" parameterType="map" resultType="HashMap">
		<![CDATA[		
	       SELECT 
				@ROWNUM := @ROWNUM + 1 AS num,
				NO as no,
				TITLE as title,
				CONTENT as content,
				PUSH_YN as pushYN,
				COUNT as count,
				date_format(INSERT_DATE,'%Y-%m-%d') as insertDate,
				date_format(UPDATE_DATE,'%Y-%m-%d') as updateDate
	        FROM girl_safe_board,(SELECT @ROWNUM := #{firstIndex}) R 
	        WHERE 1=1
	    ]]>
		<if test="pushYN != null and pushYN != ''">
			AND PUSH_YN = #{pushYN}
		</if>
		<if test="boardInsertTimeS != null and boardInsertTimeS != ''">
	    <![CDATA[
	    	AND date_format(INSERT_DATE,'%Y-%m-%d') >= #{boardInsertTimeS}
	    ]]>
		</if>
		<if test="boardInsertTimeE != null and boardInsertTimeE != ''">
	    <![CDATA[
	    	AND date_format(INSERT_DATE,'%Y-%m-%d') <= #{boardInsertTimeE}
	    ]]>
		</if>
		<if test="searchType != null and searchType != ''">
			<choose>
				<when test="searchType == 'title'">
					AND TITLE LIKE CONCAT('%', #{totSearch}, '%')
				</when>
				<when test="searchType == 'cont'">
					AND CONTENT LIKE CONCAT('%', #{totSearch}, '%')
				</when>
			</choose>
		</if>
		ORDER BY INSERT_DATE DESC
		<if test='recordCountPerPage != -1'>
			LIMIT #{firstIndex}, #{recordCountPerPage}
		</if>
	</select>

	<select id="getBoardListCnt" parameterType="map" resultType="String">
		<![CDATA[		
	       SELECT 
				COUNT(*)
			FROM girl_safe_board
	        WHERE 1=1
	     ]]>
		<if test="pushYN != null and pushYN != ''">
			AND PUSH_YN = #{pushYN}
		</if>
		<if test="boardInsertTimeS != null and boardInsertTimeS != ''">
	    <![CDATA[
	    	AND date_format(INSERT_DATE,'%Y-%m-%d') >= #{boardInsertTimeS}
	    ]]>
		</if>
		<if test="boardInsertTimeE != null and boardInsertTimeE != ''">
	    <![CDATA[
	    	AND date_format(INSERT_DATE,'%Y-%m-%d') <= #{boardInsertTimeE}
	    ]]>
		</if>
		<if test="searchType != null and searchType != ''">
			<choose>
				<when test="searchType == 'title'">
					AND TITLE LIKE CONCAT('%', #{totSearch}, '%')
				</when>
				<when test="searchType == 'cont'">
					AND CONTENT LIKE CONCAT('%', #{totSearch}, '%')
				</when>
			</choose>
		</if>

	</select>
	
	<select id="checkBoard" parameterType="map" resultType="HashMap">
		select count(*) as idKey from (select TITLE as title,CONTENT as content from girl_safe_board WHERE NO=(SELECT MAX(NO) FROM girl_safe_board)) a
		where 1=1 
		AND a.title = #{title}
		AND a.content = #{content}		
	</select>
	
	<select id="getBoardOne" parameterType="map" resultType="HashMap">
		<![CDATA[		
	       SELECT 
	       		NO as no,
				TITLE as title,
				CONTENT as content,
				PUSH_YN as pushYN,
				COUNT as count,
				date_format(INSERT_DATE,'%Y-%m-%d') as insertDate,
				date_format(UPDATE_DATE,'%Y-%m-%d') as updateDate
	        FROM girl_safe_board 
	        WHERE 1=1
	        AND NO = #{no}
	    ]]>
	</select>

	<insert id="insertBoard" parameterType="map">
		INSERT INTO
		girl_safe_board
		(TITLE, CONTENT, PUSH_YN, COUNT, INSERT_DATE,
		UPDATE_DATE)
		VALUES
		(#{title},
		#{content},
		'N',
		0,
		NOW(),
		NOW())
	</insert>

	<update id="updateBoard" parameterType="map">
		UPDATE girl_safe_board
		SET
		<if test="title != null and title != ''">
			TITLE = #{title},
		</if>
		<if test="content != null and content != ''">
			CONTENT = #{content},
		</if>
		<if test="pushYN != null and pushYN != ''">
			PUSH_YN = #{pushYN},
		</if>
		<if test="count != null and count != ''">
			COUNT = COUNT + 1,
		</if>
		UPDATE_DATE = NOW()
		WHERE NO = #{no}
	</update>

	<select id="getDistrict" parameterType="map" resultType="HashMap">
		SELECT
		<if test="city != null and city != ''">
			ENCRYPT_CITY_NAME as cityName
		</if>
		<if test="gu != null and gu != ''">
			ENCRYPT_GU_NAME as guName
		</if>
		<if test="dong != null and dong != ''">
			ENCRYPT_DONG_NAME as dongName
		</if>
		FROM district
		WHERE 1=1
		<if test="city != null and city != ''">
			GROUP BY ENCRYPT_CITY_NAME
		</if>
		<if test="gu != null and gu != ''">
			GROUP BY ENCRYPT_GU_NAME
		</if>
	</select>

	<select id="getUserGuStatsList" parameterType="map" resultType="HashMap">
		SELECT 
			label,
			SUM(IF(cnt, cnt, 0)) as total,
			SUM(IF(month='01',cnt,0)) as m1,
			SUM(IF(month='02',cnt,0)) as m2,
			SUM(IF(month='03',cnt,0)) as m3,
			SUM(IF(month='04',cnt,0)) as m4,
			SUM(IF(month='05',cnt,0)) as m5,
			SUM(IF(month='06',cnt,0)) as m6,
			SUM(IF(month='07',cnt,0)) as m7,
			SUM(IF(month='08',cnt,0)) as m8,
			SUM(IF(month='09',cnt,0)) as m9,
			SUM(IF(month='10',cnt,0)) as m10,
			SUM(IF(month='11',cnt,0)) as m11,
			SUM(IF(month='12',cnt,0)) as m12
		FROM (
			SELECT label, month, COUNT(label) as cnt
			FROM (
				SELECT ENCRYPT_ADRES, DATE_FORMAT(INSERT_DATE,'%m') month
				FROM girl_safe_user
		<if test="year != null and year != ''">
				WHERE DATE_FORMAT(INSERT_DATE,'%Y') = #{year}
		</if>
				UNION ALL
				SELECT ADRESS, DATE_FORMAT(USER_INSERT_DATE,'%m') month
				FROM girl_safe_user_withdraw
		<if test="year != null and year != ''">
				WHERE DATE_FORMAT(USER_INSERT_DATE,'%Y') = #{year}
		</if>
			) g
			INNER JOIN (
				SELECT distinct ENCRYPT_GU_NAME as label
				FROM district
			) d
			ON CAST(AES_DECRYPT(UNHEX(g.ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) LIKE CONCAT('%',d.label,'%')
			GROUP BY label, month
		) m
		GROUP BY label
		<if test='recordCountPerPage != -1'>
			LIMIT #{firstIndex}, #{recordCountPerPage}
		</if>
	</select>

	<select id="getUserGuStatsListCnt" parameterType="map"
		resultType="String">
		SELECT
		COUNT(a.label)
		FROM (
			SELECT label, month, COUNT(label) as cnt
			FROM (
				SELECT ENCRYPT_ADRES, DATE_FORMAT(INSERT_DATE,'%m') month
				FROM girl_safe_user
		<if test="year != null and year != ''">
				WHERE DATE_FORMAT(INSERT_DATE,'%Y') = #{year}
		</if>
				UNION ALL
				SELECT ADRESS, DATE_FORMAT(USER_INSERT_DATE,'%m') month
				FROM girl_safe_user_withdraw
		<if test="year != null and year != ''">
				WHERE DATE_FORMAT(USER_INSERT_DATE,'%Y') = #{year}
		</if>
			) g
			INNER JOIN (
				SELECT distinct ENCRYPT_GU_NAME as label
				FROM district
			) d
			ON CAST(AES_DECRYPT(UNHEX(g.ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) LIKE CONCAT('%',d.label,'%')
			GROUP BY label
		) AS a
	</select>

	<select id="getUserDongStatsList" parameterType="map"
		resultType="HashMap">
		SELECT 
			label,
			SUM(IF(cnt, cnt, 0)) as total,
			SUM(IF(month='01',cnt,0)) as m1,
			SUM(IF(month='02',cnt,0)) as m2,
			SUM(IF(month='03',cnt,0)) as m3,
			SUM(IF(month='04',cnt,0)) as m4,
			SUM(IF(month='05',cnt,0)) as m5,
			SUM(IF(month='06',cnt,0)) as m6,
			SUM(IF(month='07',cnt,0)) as m7,
			SUM(IF(month='08',cnt,0)) as m8,
			SUM(IF(month='09',cnt,0)) as m9,
			SUM(IF(month='10',cnt,0)) as m10,
			SUM(IF(month='11',cnt,0)) as m11,
			SUM(IF(month='12',cnt,0)) as m12
		FROM (
			SELECT label, month, COUNT(label) as cnt
			FROM (
				SELECT ENCRYPT_ADRES, DATE_FORMAT(INSERT_DATE,'%m') month
				FROM girl_safe_user
		<if test="year != null and year != ''">
				WHERE DATE_FORMAT(INSERT_DATE,'%Y') = #{year}
		</if>
				UNION ALL
				SELECT ADRESS, DATE_FORMAT(USER_INSERT_DATE,'%m') month
				FROM girl_safe_user_withdraw
		<if test="year != null and year != ''">
				WHERE DATE_FORMAT(USER_INSERT_DATE,'%Y') = #{year}
		</if>
			) g
			INNER JOIN (
				SELECT distinct ENCRYPT_DONG_NAME as label
				FROM district
			) d
			ON CAST(AES_DECRYPT(UNHEX(g.ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) LIKE CONCAT('%',d.label,'%')
			GROUP BY label, month
		) m
		GROUP BY label
		<if test='recordCountPerPage != -1'>
			LIMIT #{firstIndex}, #{recordCountPerPage}
		</if>
	</select>

	<select id="getUserDongStatsListCnt" parameterType="map"
		resultType="String">
		SELECT
		COUNT(a.label)
		FROM (
			SELECT label, month, COUNT(label) as cnt
			FROM (
				SELECT ENCRYPT_ADRES, DATE_FORMAT(INSERT_DATE,'%m') month
				FROM girl_safe_user
		<if test="year != null and year != ''">
				WHERE DATE_FORMAT(INSERT_DATE,'%Y') = #{year}
		</if>
				UNION ALL
				SELECT ADRESS, DATE_FORMAT(USER_INSERT_DATE,'%m') month
				FROM girl_safe_user_withdraw
		<if test="year != null and year != ''">
				WHERE DATE_FORMAT(USER_INSERT_DATE,'%Y') = #{year}
		</if>
			) g
			INNER JOIN (
				SELECT distinct ENCRYPT_DONG_NAME as label
				FROM district
			) d
			ON CAST(AES_DECRYPT(UNHEX(g.ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) LIKE CONCAT('%',d.label,'%')
			GROUP BY label
		) AS a
	</select>
	
	<select id="getUserAgeStatsList" parameterType="map"
		resultType="HashMap">
		SELECT 
			CASE label 
				WHEN '0' THEN '아동'
				WHEN '10' THEN '10대'
				WHEN '20' THEN '20대'
				WHEN '30' THEN '30대'
				WHEN '40' THEN '40대'
				WHEN '50' THEN '50대'
				WHEN '60' THEN '60대'
				WHEN '70' THEN '70대'
				WHEN '80' THEN '80대'
				WHEN '90' THEN '90대'
			END AS label,
			SUM(IF(cnt, cnt, 0)) as total,
			SUM(IF(month='01',cnt,0)) as m1,
			SUM(IF(month='02',cnt,0)) as m2,
			SUM(IF(month='03',cnt,0)) as m3,
			SUM(IF(month='04',cnt,0)) as m4,
			SUM(IF(month='05',cnt,0)) as m5,
			SUM(IF(month='06',cnt,0)) as m6,
			SUM(IF(month='07',cnt,0)) as m7,
			SUM(IF(month='08',cnt,0)) as m8,
			SUM(IF(month='09',cnt,0)) as m9,
			SUM(IF(month='10',cnt,0)) as m10,
			SUM(IF(month='11',cnt,0)) as m11,
			SUM(IF(month='12',cnt,0)) as m12
		FROM (
			SELECT label, month, COUNT(label) as cnt
			FROM (
				SELECT (TRUNCATE((YEAR(NOW())-LEFT(BIRTH,4)+1) / 10, 0) * 10) as label, DATE_FORMAT(INSERT_DATE,'%m') month
				FROM girl_safe_user
		<if test="year != null and year != ''">
				WHERE DATE_FORMAT(INSERT_DATE,'%Y') = #{year}
		</if>
				UNION ALL
				SELECT (TRUNCATE((YEAR(NOW())-LEFT(BIRTH,4)+1) / 10, 0) * 10) as label, DATE_FORMAT(USER_INSERT_DATE,'%m') month
				FROM girl_safe_user_withdraw
		<if test="year != null and year != ''">
				WHERE DATE_FORMAT(USER_INSERT_DATE,'%Y') = #{year}
		</if>
			) g
			GROUP BY label, month
		) m
		GROUP BY label
		<if test='recordCountPerPage != -1'>
			LIMIT #{firstIndex}, #{recordCountPerPage}
		</if>
	</select>

	<select id="getUserAgeStatsListCnt" parameterType="map"
		resultType="String">
		SELECT
		COUNT(a.label)
		FROM (
			SELECT label, month, COUNT(label) as cnt
			FROM (
				SELECT (TRUNCATE((YEAR(NOW())-LEFT(BIRTH,4)+1) / 10, 0) * 10) as label, DATE_FORMAT(INSERT_DATE,'%m') month
				FROM girl_safe_user
		<if test="year != null and year != ''">
				WHERE DATE_FORMAT(INSERT_DATE,'%Y') = #{year}
		</if>
				UNION ALL
				SELECT (TRUNCATE((YEAR(NOW())-LEFT(BIRTH,4)+1) / 10, 0) * 10) as label, DATE_FORMAT(USER_INSERT_DATE,'%m') month
				FROM girl_safe_user_withdraw
		<if test="year != null and year != ''">
				WHERE DATE_FORMAT(USER_INSERT_DATE,'%Y') = #{year}
		</if>
			) g
			GROUP BY label
		) AS a
	</select>

	<select id="getEventGuStatsList" parameterType="map" resultType="HashMap">
		SELECT 
			label,
			SUM(IF(cnt, cnt, 0)) as total,
			SUM(IF(month='01',cnt,0)) as m1,
			SUM(IF(month='02',cnt,0)) as m2,
			SUM(IF(month='03',cnt,0)) as m3,
			SUM(IF(month='04',cnt,0)) as m4,
			SUM(IF(month='05',cnt,0)) as m5,
			SUM(IF(month='06',cnt,0)) as m6,
			SUM(IF(month='07',cnt,0)) as m7,
			SUM(IF(month='08',cnt,0)) as m8,
			SUM(IF(month='09',cnt,0)) as m9,
			SUM(IF(month='10',cnt,0)) as m10,
			SUM(IF(month='11',cnt,0)) as m11,
			SUM(IF(month='12',cnt,0)) as m12
		FROM (
			SELECT label, month, COUNT(label) as cnt
			FROM (
				SELECT ENCRYPT_ADRES, DATE_FORMAT(INSERT_DATE,'%m') month
				FROM girl_safe_event
		<if test="year != null and year != ''">
				WHERE DATE_FORMAT(INSERT_DATE,'%Y') = #{year}
		</if>
			) g
			INNER JOIN (
				SELECT distinct ENCRYPT_GU_NAME as label
				FROM district
			) d
			ON CAST(AES_DECRYPT(UNHEX(g.ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) LIKE CONCAT('%',d.label,'%')
			GROUP BY label, month
		) m
		GROUP BY label
		<if test='recordCountPerPage != -1'>
			LIMIT #{firstIndex}, #{recordCountPerPage}
		</if>
	</select>

	<select id="getEventGuStatsListCnt" parameterType="map"
		resultType="String">
		SELECT
		COUNT(a.label)
		FROM (
			SELECT label, month, COUNT(label) as cnt
			FROM (
				SELECT ENCRYPT_ADRES, DATE_FORMAT(INSERT_DATE,'%m') month
				FROM girl_safe_event
		<if test="year != null and year != ''">
				WHERE DATE_FORMAT(INSERT_DATE,'%Y') = #{year}
		</if>
			) g
			INNER JOIN (
				SELECT distinct ENCRYPT_GU_NAME as label
				FROM district
			) d
			ON CAST(AES_DECRYPT(UNHEX(g.ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) LIKE CONCAT('%',d.label,'%')
			GROUP BY label
		) AS a
	</select>

	<select id="getEventDongStatsList" parameterType="map"
		resultType="HashMap">
		SELECT 
			label,
			SUM(IF(cnt, cnt, 0)) as total,
			SUM(IF(month='01',cnt,0)) as m1,
			SUM(IF(month='02',cnt,0)) as m2,
			SUM(IF(month='03',cnt,0)) as m3,
			SUM(IF(month='04',cnt,0)) as m4,
			SUM(IF(month='05',cnt,0)) as m5,
			SUM(IF(month='06',cnt,0)) as m6,
			SUM(IF(month='07',cnt,0)) as m7,
			SUM(IF(month='08',cnt,0)) as m8,
			SUM(IF(month='09',cnt,0)) as m9,
			SUM(IF(month='10',cnt,0)) as m10,
			SUM(IF(month='11',cnt,0)) as m11,
			SUM(IF(month='12',cnt,0)) as m12
		FROM (
			SELECT label, month, COUNT(label) as cnt
			FROM (
				SELECT ENCRYPT_ADRES, DATE_FORMAT(INSERT_DATE,'%m') month
				FROM girl_safe_event
		<if test="year != null and year != ''">
				WHERE DATE_FORMAT(INSERT_DATE,'%Y') = #{year}
		</if>
			) g
			INNER JOIN (
				SELECT distinct ENCRYPT_DONG_NAME as label
				FROM district
			) d
			ON CAST(AES_DECRYPT(UNHEX(g.ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) LIKE CONCAT('%',d.label,'%')
			GROUP BY label, month
		) m
		GROUP BY label
		<if test='recordCountPerPage != -1'>
			LIMIT #{firstIndex}, #{recordCountPerPage}
		</if>
	</select>

	<select id="getEventDongStatsListCnt" parameterType="map"
		resultType="String">
		SELECT
		COUNT(a.label)
		FROM (
			SELECT label, month, COUNT(label) as cnt
			FROM (
				SELECT ENCRYPT_ADRES, DATE_FORMAT(INSERT_DATE,'%m') month
				FROM girl_safe_event
		<if test="year != null and year != ''">
				WHERE DATE_FORMAT(INSERT_DATE,'%Y') = #{year}
		</if>
			) g
			INNER JOIN (
				SELECT distinct ENCRYPT_DONG_NAME as label
				FROM district
			) d
			ON CAST(AES_DECRYPT(UNHEX(g.ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) LIKE CONCAT('%',d.label,'%')
			GROUP BY label
		) AS a
	</select>

	<select id="getEventHwStatsList" parameterType="map" resultType="HashMap">
		SELECT 
			label,
			SUM(IF(cnt, cnt, 0)) as total,
			SUM(IF(month='01',cnt,0)) as m1,
			SUM(IF(month='02',cnt,0)) as m2,
			SUM(IF(month='03',cnt,0)) as m3,
			SUM(IF(month='04',cnt,0)) as m4,
			SUM(IF(month='05',cnt,0)) as m5,
			SUM(IF(month='06',cnt,0)) as m6,
			SUM(IF(month='07',cnt,0)) as m7,
			SUM(IF(month='08',cnt,0)) as m8,
			SUM(IF(month='09',cnt,0)) as m9,
			SUM(IF(month='10',cnt,0)) as m10,
			SUM(IF(month='11',cnt,0)) as m11,
			SUM(IF(month='12',cnt,0)) as m12
		FROM (
			SELECT label, month, COUNT(label) as cnt
			FROM (
				SELECT DIVISION as label, DATE_FORMAT(INSERT_DATE,'%m') month
				FROM girl_safe_event
		<if test="year != null and year != ''">
				WHERE DATE_FORMAT(INSERT_DATE,'%Y') = #{year}
		</if>
			) g
			GROUP BY label, month
		) m
		GROUP BY label
		<if test='recordCountPerPage != -1'>
			LIMIT #{firstIndex}, #{recordCountPerPage}
		</if>
	</select>

	<select id="getEventHwStatsListCnt" parameterType="map"
		resultType="String">
		SELECT
		COUNT(a.label)
		FROM (
			SELECT label, month, COUNT(label) as cnt
			FROM (
				SELECT DIVISION as label, DATE_FORMAT(INSERT_DATE,'%m') month
				FROM girl_safe_event
		<if test="year != null and year != ''">
				WHERE DATE_FORMAT(INSERT_DATE,'%Y') = #{year}
		</if>
			) g
			GROUP BY label
		) AS a
	</select>
	
	<select id="getEventAgeStatsList" parameterType="map"
		resultType="HashMap">
		SELECT 
			CASE label 
				WHEN '0' THEN '아동'
				WHEN '10' THEN '10대'
				WHEN '20' THEN '20대'
				WHEN '30' THEN '30대'
				WHEN '40' THEN '40대'
				WHEN '50' THEN '50대'
				WHEN '60' THEN '60대'
				WHEN '70' THEN '70대'
				WHEN '80' THEN '80대'
				WHEN '90' THEN '90대'
			END AS label,
			SUM(IF(cnt, cnt, 0)) as total,
			SUM(IF(month='01',cnt,0)) as m1,
			SUM(IF(month='02',cnt,0)) as m2,
			SUM(IF(month='03',cnt,0)) as m3,
			SUM(IF(month='04',cnt,0)) as m4,
			SUM(IF(month='05',cnt,0)) as m5,
			SUM(IF(month='06',cnt,0)) as m6,
			SUM(IF(month='07',cnt,0)) as m7,
			SUM(IF(month='08',cnt,0)) as m8,
			SUM(IF(month='09',cnt,0)) as m9,
			SUM(IF(month='10',cnt,0)) as m10,
			SUM(IF(month='11',cnt,0)) as m11,
			SUM(IF(month='12',cnt,0)) as m12
		FROM (
			SELECT label, month, COUNT(label) as cnt
			FROM (
				SELECT (TRUNCATE((YEAR(NOW())-LEFT(BIRTH,4)+1) / 10, 0) * 10) as label, DATE_FORMAT(INSERT_DATE,'%m') month
				FROM girl_safe_event
		<if test="year != null and year != ''">
				WHERE DATE_FORMAT(INSERT_DATE,'%Y') = #{year}
		</if>
			) g
			GROUP BY label, month
		) m
		GROUP BY label
		<if test='recordCountPerPage != -1'>
			LIMIT #{firstIndex}, #{recordCountPerPage}
		</if>
	</select>

	<select id="getEventAgeStatsListCnt" parameterType="map"
		resultType="String">
		SELECT
		COUNT(a.label)
		FROM (
			SELECT label, month, COUNT(label) as cnt
			FROM (
				SELECT (TRUNCATE((YEAR(NOW())-LEFT(BIRTH,4)+1) / 10, 0) * 10) as label, DATE_FORMAT(INSERT_DATE,'%m') month
				FROM girl_safe_event
		<if test="year != null and year != ''">
				WHERE DATE_FORMAT(INSERT_DATE,'%Y') = #{year}
		</if>
			) g
			GROUP BY label
		) AS a
	</select>

	<select id="getLogStatsList" parameterType="map" resultType="HashMap">
		SELECT 
			label,
			SUM(IF(cnt, cnt, 0)) as total,
			SUM(IF(month='01',cnt,0)) as m1,
			SUM(IF(month='02',cnt,0)) as m2,
			SUM(IF(month='03',cnt,0)) as m3,
			SUM(IF(month='04',cnt,0)) as m4,
			SUM(IF(month='05',cnt,0)) as m5,
			SUM(IF(month='06',cnt,0)) as m6,
			SUM(IF(month='07',cnt,0)) as m7,
			SUM(IF(month='08',cnt,0)) as m8,
			SUM(IF(month='09',cnt,0)) as m9,
			SUM(IF(month='10',cnt,0)) as m10,
			SUM(IF(month='11',cnt,0)) as m11,
			SUM(IF(month='12',cnt,0)) as m12
		FROM (
			SELECT label, month, COUNT(label) as cnt
			FROM (
				SELECT CONTENT as label, DATE_FORMAT(CREATE_DATE,'%m') month
				FROM girl_safe_log
                WHERE LOG_TYPE = 'ACCESSPAGE'
		<if test="year != null and year != ''">
				AND DATE_FORMAT(CREATE_DATE,'%Y') = #{year}
		</if>
			) g
			GROUP BY label, month
		) m
		GROUP BY label
		<if test='recordCountPerPage != -1'>
			LIMIT #{firstIndex}, #{recordCountPerPage}
		</if>
	</select>

	<select id="getLogStatsListCnt" parameterType="map" resultType="String">
		SELECT
		COUNT(a.label)
		FROM (
			SELECT label, month, COUNT(label) as cnt
			FROM (
				SELECT CONTENT as label, DATE_FORMAT(CREATE_DATE,'%m') month
				FROM girl_safe_log
                WHERE LOG_TYPE = 'ACCESSPAGE'
		<if test="year != null and year != ''">
				AND DATE_FORMAT(CREATE_DATE,'%Y') = #{year}
		</if>
			) g
			GROUP BY label
		) AS a
	</select>

	<select id="getEventGuStatsYearList" parameterType="map"
		resultType="HashMap">
			SELECT label
			FROM (
				SELECT ENCRYPT_ADRES, DATE_FORMAT(INSERT_DATE,'%Y') label
				FROM girl_safe_event
			) g
			INNER JOIN (
				SELECT distinct ENCRYPT_GU_NAME
				FROM district
			) d
			ON CAST(AES_DECRYPT(UNHEX(g.ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) LIKE CONCAT('%',d.ENCRYPT_GU_NAME,'%')
			GROUP BY label
	</select>

	<select id="getEventDongStatsYearList" parameterType="map"
		resultType="HashMap">
			SELECT label
			FROM (
				SELECT ENCRYPT_ADRES, DATE_FORMAT(INSERT_DATE,'%Y') label
				FROM girl_safe_event
			) g
			INNER JOIN (
				SELECT distinct ENCRYPT_DONG_NAME
				FROM district
			) d
			ON CAST(AES_DECRYPT(UNHEX(g.ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) LIKE CONCAT('%',d.ENCRYPT_DONG_NAME,'%')
			GROUP BY label
	</select>

	<select id="getEventHwStatsYearList" parameterType="map"
		resultType="HashMap">
		SELECT DATE_FORMAT(INSERT_DATE,'%Y') AS label FROM
		girl_safe_event
		GROUP BY label
	</select>

	<select id="getEventAgeStatsYearList" parameterType="map"
		resultType="HashMap">
		SELECT DATE_FORMAT(INSERT_DATE,'%Y') AS label FROM
		girl_safe_event
		GROUP BY label
	</select>

	<select id="getUserGuStatsYearList" parameterType="map"
		resultType="HashMap">
		SELECT label
		FROM (
			SELECT ENCRYPT_ADRES, DATE_FORMAT(INSERT_DATE,'%Y') label
			FROM girl_safe_user
			UNION ALL
			SELECT ADRESS, DATE_FORMAT(USER_INSERT_DATE,'%Y') label
			FROM girl_safe_user_withdraw
		) g
		INNER JOIN (
			SELECT distinct ENCRYPT_GU_NAME
			FROM district
		) d
		ON CAST(AES_DECRYPT(UNHEX(g.ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) LIKE CONCAT('%',ENCRYPT_GU_NAME,'%')
		GROUP BY label
	</select>

	<select id="getUserDongStatsYearList" parameterType="map"
		resultType="HashMap">
		SELECT label
		FROM (
			SELECT ENCRYPT_ADRES, DATE_FORMAT(INSERT_DATE,'%Y') label
			FROM girl_safe_user
			UNION ALL
			SELECT ADRESS, DATE_FORMAT(USER_INSERT_DATE,'%Y') label
			FROM girl_safe_user_withdraw
		) g
		INNER JOIN (
			SELECT distinct ENCRYPT_DONG_NAME
			FROM district
		) d
		ON CAST(AES_DECRYPT(UNHEX(g.ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) LIKE CONCAT('%',ENCRYPT_DONG_NAME,'%')
		GROUP BY label
	</select>

	<select id="getUserAgeStatsYearList" parameterType="map"
		resultType="HashMap">
		SELECT label
		FROM (
			SELECT DATE_FORMAT(INSERT_DATE,'%Y') label
			FROM girl_safe_user
			UNION ALL
			SELECT DATE_FORMAT(USER_INSERT_DATE,'%Y') label
			FROM girl_safe_user_withdraw
		) g
		GROUP BY label
	</select>

	<select id="getLogStatsYearList" parameterType="map" resultType="HashMap">
		SELECT DATE_FORMAT(CREATE_DATE,'%Y') AS label FROM girl_safe_log
		GROUP BY DATE_FORMAT(CREATE_DATE,'%Y')
	</select>


	<select id="smsUser" parameterType="map" resultType="HashMap">
		SELECT
		CAST(AES_DECRYPT(UNHEX(a.ENCRYPT_NAME), 'aycctv!1808')AS CHAR) as name,
		CAST(AES_DECRYPT(UNHEX(c.S_ENCRYPT_NAME), 'aycctv!1808')AS CHAR) as sName,
		CAST(AES_DECRYPT(UNHEX(c.S_PHONE_NUMBER), 'aycctv!1808')AS CHAR) as sPhoneNumber,
		b.SENSOR_CONN as sensorConn,
		b.SMART_CONN as smartConn
		FROM girl_safe_user a
		JOIN girl_safe_hw b ON
		a.PHONE_NUMBER = b.PHONE_NUMBER
		JOIN girl_safe_user_sub c ON
		a.PHONE_NUMBER = c.PHONE_NUMBER
		WHERE b.SENSOR_ID = #{sensorId}
	</select>

	<select id="getEvent" parameterType="map" resultType="HashMap">
		SELECT
		CAST(AES_DECRYPT(UNHEX(a.ENCRYPT_NAME), 'aycctv!1808')AS CHAR) as name,
		CAST(AES_DECRYPT(UNHEX(a.ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) as adres,
		a.PHONE_NUMBER as phoneNumber,
		a.BIRTH as birth,
		a.PICTURE as picture,
		b.POINT_X as pointX,
		b.POINT_Y as pointY,
		b.M_POINT_X as mPointX,
		b.M_POINT_Y as mPointY,
		b.SENSOR_CONN as sensorConn,
		b.SMART_CONN as smartConn,
		b.EMERGENCY as emergency,
		CAST(AES_DECRYPT(UNHEX(c.S_ENCRYPT_NAME), 'aycctv!1808')AS CHAR) as sName,
		CAST(AES_DECRYPT(UNHEX(c.S_PHONE_NUMBER), 'aycctv!1808')AS CHAR) as sPhoneNumber,
		CASE c.RELATIONS
			WHEN '0' THEN '기타'
			WHEN '1' THEN '부'
			WHEN '2' THEN '모'
			WHEN '3' THEN '형제'
			WHEN '4' THEN '애인'
			WHEN '5' THEN '친척'
			WHEN '6' THEN '친구'
		END as realation,
		c.RELATION_NAME as relationName,
		now() as time,
		d.NO as no
		FROM girl_safe_user a
		JOIN girl_safe_hw b ON a.PHONE_NUMBER =
		b.PHONE_NUMBER
		LEFT JOIN girl_safe_user_sub c ON a.PHONE_NUMBER =
		c.PHONE_NUMBER
		JOIN girl_safe_event d ON a.PHONE_NUMBER =
		d.PHONE_NUMBER
		WHERE 1=1 
		AND b.SENSOR_ID = #{sensorId}
		AND END_YN='N'
	</select>

	
	<select id="getClearEvent" parameterType="map" resultType="HashMap">
		SELECT
		CAST(AES_DECRYPT(UNHEX(a.ENCRYPT_NAME), 'aycctv!1808')AS CHAR) as name,
		CAST(AES_DECRYPT(UNHEX(a.ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) as adres,
		a.PHONE_NUMBER as phoneNumber,
		a.BIRTH as birth,
		a.PICTURE as picture,
		b.POINT_X as pointX,
		b.POINT_Y as pointY,
		b.M_POINT_X as mPointX,
		b.M_POINT_Y as mPointY,
		b.SENSOR_CONN as sensorConn,
		b.SMART_CONN as smartConn,
		b.EMERGENCY as emergency,
		CAST(AES_DECRYPT(UNHEX(c.S_ENCRYPT_NAME), 'aycctv!1808')AS CHAR) as sName,
		CAST(AES_DECRYPT(UNHEX(c.S_PHONE_NUMBER), 'aycctv!1808')AS CHAR) as sPhoneNumber,
		CASE c.RELATIONS
			WHEN '0' THEN '기타'
			WHEN '1' THEN '부'
			WHEN '2' THEN '모'
			WHEN '3' THEN '형제'
			WHEN '4' THEN '애인'
			WHEN '5' THEN '친척'
			WHEN '6' THEN '친구'
		END as realation,
		c.RELATION_NAME as relationName,
		now() as time,
		MAX(d.NO) as no
		FROM girl_safe_user a
		JOIN girl_safe_hw b ON a.PHONE_NUMBER =
		b.PHONE_NUMBER
		LEFT JOIN girl_safe_user_sub c ON a.PHONE_NUMBER =
		c.PHONE_NUMBER
		JOIN girl_safe_event d ON a.PHONE_NUMBER =
		d.PHONE_NUMBER
		WHERE 1=1 
		AND b.SENSOR_ID = #{sensorId}
	</select>

	<select id="isSensorId" parameterType="map" resultType="HashMap">
		SELECT
		COUNT(SENSOR_ID) as cnt
		FROM girl_safe_hw
		WHERE SENSOR_ID = #{sensorId}
	</select>

	<select id="isSmartId" parameterType="map" resultType="HashMap">
		SELECT
		COUNT(SMART_ID) as cnt
		FROM girl_safe_hw
		WHERE SMART_ID = #{smartId}
	</select>

	<select id="isPhoneNumber" parameterType="map" resultType="HashMap">
		SELECT
		COUNT(PHONE_NUMBER) as cnt
		FROM girl_safe_user
		WHERE PHONE_NUMBER = #{phoneNumber}
	</select>

	<select id="getAdminList" parameterType="map" resultType="HashMap">
		<![CDATA[		
	       SELECT 
				@ROWNUM := @ROWNUM + 1 AS num,
				a.SEQ_NO as seqNo,
				a.ID as id,
				a.PWD as password,
				a.NAME as name,
				a.BIRTHDAY as birthday,
				a.PHONE_NO as phoneNumber,
				a.EMAIL as email,
				a.ADDRESS as address,
				a.RANK as rank,
				date_format(a.CREATE_DATE,'%Y-%m-%d %H:%i:%s')as insertDate,
				date_format(a.UPD_DATE,'%Y-%m-%d %H:%i:%s') as updateDate 
			FROM admin a
	        ,(SELECT @ROWNUM := #{firstIndex}) R 
	        WHERE 1=1
	     ]]>
		<if test="userTimeS != null and userTimeS != ''">
	    <![CDATA[
	    	AND a.CREATE_DATE >= #{userTimeS}
	    ]]>
		</if>
		<if test="userTimeE != null and userTimeE != ''">
	    <![CDATA[
	    	AND a.CREATE_DATE <= #{userTimeE}
	    ]]>
		</if>
		<if test='recordCountPerPage != -1'>
			LIMIT #{firstIndex}, #{recordCountPerPage}
		</if>
	</select>
	
	<select id="getAdminListCnt" parameterType="map" resultType="String">
		<![CDATA[
	         SELECT 
				COUNT(*)
			FROM admin a
			WHERE 1=1
	     ]]>
		<if test="userTimeS != null and userTimeS != ''">
	    <![CDATA[
	    	AND a.CREATE_DATE >= #{userTimeS}
	    ]]>
		</if>
		<if test="userTimeE != null and userTimeE != ''">
	    <![CDATA[
	    	AND a.CREATE_DATE <= #{userTimeE}
	    ]]>
		</if>
	</select>

	<select id="getAdmin" parameterType="map" resultType="HashMap">
		<![CDATA[		
	       SELECT 
				a.SEQ_NO as seqNo,
				a.ID as id,
				a.PWD as password,
				a.NAME as name,
				a.BIRTHDAY as birthday,
				a.PHONE_NO as phoneNumber,
				a.EMAIL as email,
				a.ADDRESS as address,
				a.RANK as rank,
				date_format(a.CREATE_DATE,'%Y-%m-%d %H:%i:%s')as insertDate,
				date_format(a.UPD_DATE,'%Y-%m-%d %H:%i:%s') as updateDate 
			FROM admin a
	        WHERE 1=1
	     ]]>
		AND a.ID = #{id}
	</select>
	
	<select id="getCheckAdminId" parameterType="map" resultType="HashMap">
		<![CDATA[		
	       SELECT 
				count(*) as idKey
			FROM admin a
	        WHERE 1=1
	     ]]>
	    AND id = #{id}
	</select>
	
	
	<insert id="insertAdmin" parameterType="map">
		<![CDATA[
		INSERT INTO admin (
			ID,
			PWD,
			NAME,
			BIRTHDAY,
			PHONE_NO,
			EMAIL,
			ADDRESS,
			RANK,
			LOGIN_FAIL_COUNT,
			CREATE_DATE,
			UPD_DATE
		) VALUES (
			#{id},
			#{password},
			#{name},
			#{birthday},
			#{phoneNumber},
			#{email},
			#{address},
			#{rank},
			0,
			NOW(),
			NOW()
		)
		]]>
	</insert>

	<update id="updateAdmin" parameterType="map">
		<![CDATA[
		UPDATE admin
		SET
		]]>
		<if test="password != null">
			PWD=#{password},
		</if>
		<![CDATA[
		NAME=#{name},
		BIRTHDAY=#{birthday},
		PHONE_NO=#{phoneNumber},
		EMAIL=#{email},
		ADDRESS=#{address},
		RANK=#{rank},
		UPD_DATE=NOW()
		WHERE SEQ_NO=#{seqNo};
		]]>
	</update>
	
	<update id="updatePassFail" parameterType="map">
		<![CDATA[
		UPDATE admin
		SET
		LOGIN_FAIL_COUNT=0
		WHERE ID=#{id};
		]]>
	</update>
	
	<delete id="deleteAdmin" parameterType="map">
		<![CDATA[
		DELETE
		FROM admin
		WHERE SEQ_NO=#{seqNo};
		]]>
	</delete>

	<select id="getLoginFailCount" parameterType="map" resultType="String">
		<![CDATA[		
	       SELECT 
				LOGIN_FAIL_COUNT
			FROM admin
	        WHERE ID=#{id};
	     ]]>
	</select>

	<update id="updateLoginFailCount" parameterType="map">
		<![CDATA[
			UPDATE admin
			SET
			]]>
		<if test='checkFlag == "X"'>
			LOGIN_FAIL_COUNT=LOGIN_FAIL_COUNT+1
		</if>
		<if test='checkFlag == "O"'>
			LOGIN_FAIL_COUNT=0
		</if>
			<![CDATA[
			WHERE ID=#{id};
		]]>
	</update>

	<select id="passCheck" parameterType="map" resultType="String">
		<![CDATA[
	       SELECT
	       		COUNT(*)
			FROM admin
			WHERE 1=1
			AND id = #{userId}
			AND pwd = #{orgPassword}
			AND deleted = 'N'
	     ]]>
	</select>

	<update id="updatePassword" parameterType="map">
		<![CDATA[
			UPDATE admin
			   SET last_pwd_update_date = DATE_FORMAT(now(),'%Y%m%d%H%i%s')
		]]>
		<if test='passFlag != "later"'><![CDATA[
				, pwd = #{newPassword}
		]]></if>
		<![CDATA[
			WHERE id = #{userId}
		]]>
		<if test='passFlag != "later"'><![CDATA[
			AND pwd = #{orgPassword}
		]]></if>
		<![CDATA[
			AND deleted = 'N'
 		]]>
	</update>

	<insert id="mobileInsert" parameterType="map">
		INSERT INTO
		police_mobile_list (
		MOBILE_ID,
		MOBILE_TYPE,
		MAC_ADDRESS,
		DESCRIPTION,
		IP_DOMAIN,
		UPDATE_DATE
		) VALUES (
		#{mobileID},
		#{mobileType},
		#{macAddress},
		#{description},
		#{ipDomain},
		NOW()
		)
		ON DUPLICATE KEY UPDATE
		MOBILE_ID = #{mobileID},
		MOBILE_TYPE = #{mobileType},
		MAC_ADDRESS = #{macAddress},
		DESCRIPTION = #{description},
		IP_DOMAIN = #{ipDomain},
		UPDATE_DATE = NOW()
	</insert>

	<insert id="eventResult" parameterType="map">
		INSERT INTO
		police_mobile_list (
		MOBILE_ID,
		MOBILE_TYPE,
		MAC_ADDRESS,
		DESCRIPTION,
		IP_DOMAIN,
		UPDATE_DATE
		) VALUES (
		#{mobileID},
		#{mobileType},
		#{macAddress},
		#{description},
		#{ipDomain},
		NOW()
		)
		ON DUPLICATE KEY UPDATE
		MOBILE_ID = #{mobileID},
		MOBILE_TYPE = #{mobileType},
		MAC_ADDRESS = #{macAddress},
		DESCRIPTION = #{description},
		IP_DOMAIN = #{ipDomain},
		UPDATE_DATE = NOW()
	</insert>
	
	
	<insert id="insertSmsLog" parameterType="map">
		<![CDATA[
		INSERT INTO girl_safe_sms_log
		 (
			NAME,
			PHONE_NUMBER,
			S_NAME,
			S_PHONE_NUMBER,
			INSERT_DATE
		) VALUES (
			HEX(AES_ENCRYPT(#{name},'aycctv!1808')),
			HEX(AES_ENCRYPT(#{phoneNumber},'aycctv!1808')),
			HEX(AES_ENCRYPT(#{sName},'aycctv!1808')),
			HEX(AES_ENCRYPT(#{sPhoneNumber},'aycctv!1808')),
			now()
		)
		]]>
	</insert>
	
	
	<select id="getSmsLogList" parameterType="map" resultType="HashMap">
		<![CDATA[
	       SELECT
	       @ROWNUM := @ROWNUM + 1 AS num, 
	    ]]>
	   			CAST(AES_DECRYPT(UNHEX(NAME), 'aycctv!1808')AS CHAR) as name,
	    <![CDATA[
	    		CASE LENGTH(CAST(AES_DECRYPT(UNHEX(PHONE_NUMBER), 'aycctv!1808')AS CHAR))
					WHEN 11 THEN CONCAT(SUBSTR(CAST(AES_DECRYPT(UNHEX(PHONE_NUMBER), 'aycctv!1808')AS CHAR),1,3),'-',SUBSTR(CAST(AES_DECRYPT(UNHEX(PHONE_NUMBER), 'aycctv!1808')AS CHAR),4,4),'-',SUBSTR(CAST(AES_DECRYPT(UNHEX(PHONE_NUMBER), 'aycctv!1808')AS CHAR),8,4))
					WHEN 10 THEN CONCAT(SUBSTR(CAST(AES_DECRYPT(UNHEX(PHONE_NUMBER), 'aycctv!1808')AS CHAR),4,3),'-',SUBSTR(CAST(AES_DECRYPT(UNHEX(PHONE_NUMBER), 'aycctv!1808')AS CHAR),7,4))
					ELSE a.PHONE_NUMBER
				END phoneNumber,
				CAST(AES_DECRYPT(UNHEX(S_NAME), 'aycctv!1808')AS CHAR) as sName,
				CASE LENGTH(CAST(AES_DECRYPT(UNHEX(S_PHONE_NUMBER), 'aycctv!1808')AS CHAR))
					WHEN 11 THEN CONCAT(SUBSTR(CAST(AES_DECRYPT(UNHEX(S_PHONE_NUMBER), 'aycctv!1808')AS CHAR),1,3),'-',SUBSTR(CAST(AES_DECRYPT(UNHEX(S_PHONE_NUMBER), 'aycctv!1808')AS CHAR),4,4),'-',SUBSTR(CAST(AES_DECRYPT(UNHEX(S_PHONE_NUMBER), 'aycctv!1808')AS CHAR),8,4))
					WHEN 10 THEN CONCAT(SUBSTR(CAST(AES_DECRYPT(UNHEX(S_PHONE_NUMBER), 'aycctv!1808')AS CHAR),1,3),'-',SUBSTR(CAST(AES_DECRYPT(UNHEX(S_PHONE_NUMBER), 'aycctv!1808')AS CHAR),4,3),'-',SUBSTR(CAST(AES_DECRYPT(UNHEX(S_PHONE_NUMBER), 'aycctv!1808')AS CHAR),7,4))
					ELSE CAST(AES_DECRYPT(UNHEX(S_PHONE_NUMBER), 'aycctv!1808')AS CHAR)
				END sPhoneNumber,
				date_format(INSERT_DATE,'%Y-%m-%d %H:%i:%s')as insertDate
			FROM girl_safe_sms_log a
			,(SELECT @ROWNUM := #{firstIndex}) R
	        WHERE 1=1
		]]>
		<if test="userTimeS != null and userTimeS != ''">
		<![CDATA[
			AND date_format(INSERT_DATE,'%Y-%m-%d') >= #{userTimeS}
		]]>
		</if>
		<if test="userTimeE != null and userTimeE != ''">
	    <![CDATA[
	    	AND date_format(INSERT_DATE,'%Y-%m-%d') <= #{userTimeE}
	    ]]>
		</if>
		<if test="searchType != null and searchType != '' and totSearch != ''">
			<choose>
				<when test="searchType == 'name'">
					AND CAST(AES_DECRYPT(UNHEX(NAME), 'aycctv!1808')AS CHAR) LIKE CONCAT('%', #{totSearch},
					'%')
				</when>
				<when test="searchType == 'phon'">
					AND CAST(AES_DECRYPT(UNHEX(PHONE_NUMBER), 'aycctv!1808')AS CHAR) LIKE CONCAT('%', #{totSearch},
					'%')
				</when>
			</choose>
		</if>
		ORDER BY INSERT_DATE DESC
		<if test='recordCountPerPage != -1'>
			LIMIT #{firstIndex}, #{recordCountPerPage}
		</if>
	</select>
	
	<select id="getSmsLogListCnt" parameterType="map" resultType="String">
		<![CDATA[
	       SELECT
	    	COUNT(*)
			FROM girl_safe_sms_log a
	        WHERE 1=1
		]]>
		<if test="userTimeS != null and userTimeS != ''">
		<![CDATA[
			AND date_format(INSERT_DATE,'%Y-%m-%d') >= #{userTimeS}
		]]>
		</if>
		<if test="userTimeE != null and userTimeE != ''">
	    <![CDATA[
	    	AND date_format(INSERT_DATE,'%Y-%m-%d') <= #{userTimeE}
	    ]]>
		</if>
		<if test="searchType != null and searchType != '' and totSearch != ''">
			<choose>
				<when test="searchType == 'name'">
					AND CAST(AES_DECRYPT(UNHEX(NAME), 'aycctv!1808')AS CHAR) LIKE CONCAT('%', #{totSearch},
					'%')
				</when>
				<when test="searchType == 'phon'">
					AND CAST(AES_DECRYPT(UNHEX(PHONE_NUMBER), 'aycctv!1808')AS CHAR) LIKE CONCAT('%', #{totSearch},
					'%')
				</when>
			</choose>
		</if>
	</select>
	
	
	<select id="getPushLogList" parameterType="map" resultType="HashMap">
		<![CDATA[
	       SELECT
	    	    @ROWNUM := @ROWNUM + 1 AS num, 
	    		TITLE as title,
	    		CONTENT as content,
	    		CASE PUSH_KIND
					WHEN 'N' THEN '일반'
					WHEN 'P' THEN '강제'
				END as pushKind,
				date_format(INSERT_DATE,'%Y-%m-%d %H:%i:%s')as insertDate
			FROM push_log
			,(SELECT @ROWNUM := #{firstIndex}) R
	        WHERE 1=1
		]]>
		<if test="userTimeS != null and userTimeS != ''">
		<![CDATA[
			AND date_format(INSERT_DATE,'%Y-%m-%d') >= #{userTimeS}
		]]>
		</if>
		<if test="userTimeE != null and userTimeE != ''">
	    <![CDATA[
	    	AND date_format(INSERT_DATE,'%Y-%m-%d') <= #{userTimeE}
	    ]]>
		</if>
		<if test="pushKind != null and pushKind != ''">
			AND PUSH_KIND = #{pushKind}
		</if>
		<if test="searchType != null and searchType != '' and totSearch != ''">
			<choose>
				<when test="searchType == 'name'">
					AND TITLE LIKE CONCAT('%', #{totSearch},
					'%')
				</when>
				<when test="searchType == 'phon'">
					AND CONTENT LIKE CONCAT('%', #{totSearch},
					'%')
				</when>
			</choose>
		</if>
		ORDER BY INSERT_DATE DESC
		<if test='recordCountPerPage != -1'>
			LIMIT #{firstIndex}, #{recordCountPerPage}
		</if>
	</select>
	
	<select id="getPushLogListCnt" parameterType="map" resultType="String">
		<![CDATA[
	       SELECT
	    	COUNT(*)
			FROM push_log a
	        WHERE 1=1
		]]>
		<if test="userTimeS != null and userTimeS != ''">
		<![CDATA[
			AND date_format(INSERT_DATE,'%Y-%m-%d') >= #{userTimeS}
		]]>
		</if>
		<if test="userTimeE != null and userTimeE != ''">
	    <![CDATA[
	    	AND date_format(INSERT_DATE,'%Y-%m-%d') <= #{userTimeE}
	    ]]>
		</if>
		<if test="pushKind != null and pushKind != ''">
			AND PUSH_KIND = #{pushKind}
		</if>
		<if test="searchType != null and searchType != '' and totSearch != ''">
			<choose>
				<when test="searchType == 'name'">
					AND TITLE LIKE CONCAT('%', #{totSearch},
					'%')
				</when>
				<when test="searchType == 'phon'">
					AND CONTENT LIKE CONCAT('%', #{totSearch},
					'%')
				</when>
			</choose>
		</if>
	</select>
	
	
	<insert id="insertPushLog" parameterType="map">
		INSERT INTO push_log
				(TITLE, CONTENT, PUSH_KIND, INSERT_DATE)
			SELECT
				TITLE,
				CONTENT,
				#{pushKind},
				now()
			FROM girl_safe_board 
			WHERE 1=1
			AND NO=#{no}
	</insert>
	
	<select id="getStatus" parameterType="map" resultType="HashMap">
		<![CDATA[
			SELECT *
			  FROM (
			  		(SELECT COUNT(*) as userNum FROM girl_safe_user) A,
			  		(SELECT SUM(IF((SMART_CONN=1 OR SENSOR_CONN=1),1,0)) as sensorOn,
			  				SUM(IF((SMART_CONN=0 AND SENSOR_CONN=0),1,0)) as sensorOff FROM girl_safe_hw ) B
			  )
		]]>
	</select>
    
    <insert id="insertWithdraw" parameterType="map">
        <![CDATA[
            INSERT INTO girl_safe_user_withdraw
                  ( 
                  	BIRTH,
                  	ADRESS,
                  	USER_INSERT_DATE,
                  	REASON_NUMBER,
                  	REASON,
                  	INSERT_DATE
                  )
           SELECT 
				BIRTH,
				ENCRYPT_ADRES,
				INSERT_DATE,
                0,
                '기타',
                now()
           FROM girl_safe_user
           WHERE 1=1
           AND PHONE_NUMBER = #{phoneNumber}
        ]]>
    </insert>
	
	<select id="getAccessLogList" parameterType="map" resultType="HashMap">
		<![CDATA[
			SELECT @ROWNUM := @ROWNUM + 1 AS num, m.*
			FROM (
					SELECT l.log_no as logNo
	       				  ,l.log_type as logType
	       				  ,l.admin_id as id
	       				  ,a.name as name
	       				  ,a.address as address
	       				  ,l.content as content
	       				  ,l.ip as ip
	       				  ,l.session_id as sessionId
	       				  ,MAX(l.accessS) as accessS
	       				  ,MAX(l.accessE) as accessE
	       			FROM (
	       					SELECT *
	       						  ,IF(l.log_type = 'LOGIN', l.create_date, '') as accessS
	       						  ,IF(l.log_type IN ('LOGOUT','SESSIONOUT'), l.create_date, '') as accessE
	       					FROM girl_safe_log l
	       					WHERE l.log_type IN ('LOGIN','LOGOUT','SESSIONOUT')
	       					GROUP BY l.session_id, l.content
	       					ORDER BY l.session_id DESC, l.create_date
	       				) l
	       				, admin a
	       			WHERE l.admin_id = a.id
	       			GROUP BY l.session_id, l.admin_id
	       			ORDER BY l.create_date
	       	) m
	       	,(SELECT @ROWNUM := 0) R
	       	WHERE 1=1
	     ]]>
	     <if test="timeS != null and timeS != ''">
	     <![CDATA[
	     	AND accessS >= #{timeS}
	     	
	     ]]>
	     </if>
	     <if test="timeE != null and timeE != ''">
	     <![CDATA[
	     	AND accessS <= #{timeE}
	     ]]>
	     </if>
	     <if test='recordCountPerPage != -1'>
	     LIMIT #{firstIndex}, #{recordCountPerPage}
	     </if>
	</select>
	<select id="getAccessLogListCnt" parameterType="map" resultType="String">
		<![CDATA[
			SELECT COUNT(*)
			FROM (
					SELECT l.log_no as logNo
	       				  ,l.log_type as logType
	       				  ,l.admin_id as id
	       				  ,a.name as name
	       				  ,a.address as address
	       				  ,a.rank as rank
	       				  ,l.content as content
	       				  ,l.ip as ip
	       				  ,l.session_id as sessionId
	       				  ,MAX(l.accessS) as accessS
	       				  ,MAX(l.accessE) as accessE
	       			FROM (
	       					SELECT *
	       						  ,IF(l.log_type = 'LOGIN', l.create_date, '') as accessS
	       						  ,IF(l.log_type IN ('LOGOUT','SESSIONOUT'), l.create_date, '') as accessE
	       					FROM girl_safe_log l
	       					WHERE l.log_type IN ('LOGIN','LOGOUT','SESSIONOUT')
	       					GROUP BY l.session_id, l.content
	       					ORDER BY l.session_id DESC, l.create_date
	       				) l
	       				, admin a
	       			WHERE l.admin_id = a.id
	       			GROUP BY l.session_id, l.admin_id
	       			ORDER BY l.create_date
	       	) m
	       	WHERE 1=1
	     ]]>
	     <if test="timeS != null and timeS != ''">
	     <![CDATA[
	     	AND accessS >= #{timeS}
	     	
	     ]]>
	     </if>
	     <if test="timeE != null and timeE != ''">
	     <![CDATA[
	     	AND accessS <= #{timeE}
	     ]]>
	     </if>
	</select>
</mapper>