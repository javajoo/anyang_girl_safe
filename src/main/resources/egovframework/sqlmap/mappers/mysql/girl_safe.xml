<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="girlSafe">
	<select id="getUserList" parameterType="map" resultType="HashMap">
		<![CDATA[
		SELECT @ROWNUM := @ROWNUM + 1 AS num,ac.* FROM
		(
		SELECT aa.*,(CASE @vphonenumber WHEN aa.phoneNumber THEN @rowsnum:=@rowsnum+1 ELSE @rowsnum:=1 END) cntNum, 
		(@vphonenumber:=aa.phoneNumber) vphonenumber 
		FROM
		(
	       SELECT 
	    ]]>
	   			CAST(AES_DECRYPT(UNHEX(a.ENCRYPT_NAME), 'aycctv!1808')AS CHAR) as name,
	    <![CDATA[
	    		CONCAT(date_format(a.BIRTH,'%Y-%m-%d'),' (',(YEAR(NOW())-LEFT(a.BIRTH,4)+1),'세)') as birthAge,
	    		CASE LENGTH(a.PHONE_NUMBER)
					WHEN 11 THEN CONCAT(SUBSTR(a.PHONE_NUMBER,1,3),'-',SUBSTR(a.PHONE_NUMBER,4,4),'-',SUBSTR(a.PHONE_NUMBER,8,4))
					WHEN 10 THEN CONCAT(SUBSTR(a.PHONE_NUMBER,1,3),'-',SUBSTR(a.PHONE_NUMBER,4,3),'-',SUBSTR(a.PHONE_NUMBER,7,4))
					ELSE a.PHONE_NUMBER
				END phoneNumber,
				]]>
				CAST(AES_DECRYPT(UNHEX(a.ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) as address,
				<![CDATA[
				CASE a.APPROVAL
					WHEN 'N' THEN '비승인'
					WHEN 'Y' THEN '승인'
				END as approval,
				b.SMART_ID as smartId,
				b.SENSOR_ID as sensorId,				
				CASE b.STATUS
					WHEN '0' THEN 'ON'
					WHEN '1' THEN 'OFF'
				END as status,
				b.STATUS as chkStatus,
				b.BAT as bat,
				CASE b.BAT
					WHEN '0' THEN '좋음'
					WHEN '1' THEN '양호'
					WHEN '2' THEN '나쁨'
				END as krBat,
				b.SENSOR_CONN as sensorConn,
				b.SMART_CONN as smartConn,
				b.BAT as chkBat,
				b.EMERGENCY as emergency,
				b.POINT_X as pointX,
				b.POINT_Y as pointY,
				b.M_POINT_X as mPointX,
				b.M_POINT_Y as mPointY,
				date_format(a.INSERT_DATE,'%Y-%m-%d %H:%i:%s')as insertDate,
				date_format(a.UPDATE_DATE,'%Y-%m-%d %H:%i:%s') as updateDate,
				CASE LENGTH(CAST(AES_DECRYPT(UNHEX(c.S_PHONE_NUMBER), 'aycctv!1808')AS CHAR))
					WHEN 11 THEN CONCAT(SUBSTR(CAST(AES_DECRYPT(UNHEX(c.S_PHONE_NUMBER), 'aycctv!1808')AS CHAR),1,3),'-',SUBSTR(CAST(AES_DECRYPT(UNHEX(c.S_PHONE_NUMBER), 'aycctv!1808')AS CHAR),4,4),'-',SUBSTR(CAST(AES_DECRYPT(UNHEX(c.S_PHONE_NUMBER), 'aycctv!1808')AS CHAR),8,4))
					WHEN 10 THEN CONCAT(SUBSTR(CAST(AES_DECRYPT(UNHEX(c.S_PHONE_NUMBER), 'aycctv!1808')AS CHAR),1,3),'-',SUBSTR(CAST(AES_DECRYPT(UNHEX(c.S_PHONE_NUMBER), 'aycctv!1808')AS CHAR),4,3),'-',SUBSTR(CAST(AES_DECRYPT(UNHEX(c.S_PHONE_NUMBER), 'aycctv!1808')AS CHAR),7,4))
					ELSE CAST(AES_DECRYPT(UNHEX(c.S_PHONE_NUMBER), 'aycctv!1808')AS CHAR)
				END sPhoneNumber
			FROM girl_safe_user a
	        JOIN girl_safe_hw b
	        ON a.PHONE_NUMBER = b.PHONE_NUMBER
	        LEFT JOIN girl_safe_user_sub c
	        ON a.PHONE_NUMBER = c.PHONE_NUMBER
	        WHERE 1=1
		]]>
		<if test="emergency != null and emergency != ''">
			AND b.EMERGENCY = #{emergency}
		</if>
		<if test="hwStatus != null and hwStatus != ''">
			AND b.STATUS = #{hwStatus}
		</if>
		<if test="batStatus != null and batStatus != ''">
			AND b.BAT = #{batStatus}
		</if>
		<if test="userTimeS != null and userTimeS != ''">
		<![CDATA[
			AND date_format(a.INSERT_DATE,'%Y-%m-%d') >= #{userTimeS}
		]]>
		</if>
		<if test="userTimeE != null and userTimeE != ''">
	    <![CDATA[
	    	AND date_format(a.INSERT_DATE,'%Y-%m-%d') <= #{userTimeE}
	    ]]>
		</if>
		<if test="searchType != null and searchType != '' and totSearch != ''">
			<choose>
				<when test="searchType == 'name'">
					AND CAST(AES_DECRYPT(UNHEX(a.ENCRYPT_NAME), 'aycctv!1808')AS CHAR) LIKE CONCAT('%', #{totSearch},
					'%')
				</when>
				<when test="searchType == 'age'">
					AND YEAR(NOW())-LEFT(a.BIRTH,4)+1 = #{totSearch}
				</when>
				<when test="searchType == 'adres'">
					AND CAST(AES_DECRYPT(UNHEX(a.ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) LIKE CONCAT('%', #{totSearch},
					'%')
				</when>
				<when test="searchType == 'phon'">
					AND a.PHONE_NUMBER LIKE CONCAT('%', #{totSearch},
					'%')
				</when>
				<when test="searchType == 'sensor'">
					AND b.SENSOR_ID LIKE CONCAT('%', #{totSearch}, '%')
				</when>
				<when test="searchType == 'smart'">
					AND b.SMART_ID LIKE CONCAT('%', #{totSearch}, '%')
				</when>
			</choose>
		</if>
		<if test="lastTimeS != null and lastTimeS != ''">
	    <![CDATA[
	    	AND date_format(a.UPDATE_DATE,'%Y-%m-%d') >= #{lastTimeS}
	    ]]>
		</if>
		<if test="lastTimeE != null and lastTimeE != ''">
	    <![CDATA[
	    	AND date_format(a.UPDATE_DATE,'%Y-%m-%d') <= #{lastTimeE}
	    ]]>
		</if>
		ORDER BY a.PHONE_NUMBER
		LIMIT 1844674406757864665
		) aa ,
		(SELECT @vphoneNumber:='', @rowsnum:=0 FROM DUAL) ab
		ORDER BY aa.phoneNumber
		)ac 
    	,(SELECT @ROWNUM := #{firstIndex}) R
    	WHERE 1=1
    	AND cntNum='1'
		<if test='recordCountPerPage != -1'>
			LIMIT #{firstIndex}, #{recordCountPerPage}
		</if>
	</select>

	<select id="getUserListCnt" parameterType="map" resultType="String">
		<![CDATA[	
		SELECT count(*) FROM
		(
		SELECT aa.*,(CASE @vphonenumber WHEN aa.PHONE_NUMBER THEN @rowsnum:=@rowsnum+1 ELSE @rowsnum:=1 END) cntNum, 
		(@vphonenumber:=aa.PHONE_NUMBER) vphonenumber 
		FROM
		(		
	         SELECT 
				a.PHONE_NUMBER
			FROM girl_safe_user a
	        JOIN girl_safe_hw b on a.PHONE_NUMBER = b.PHONE_NUMBER
	        LEFT JOIN girl_safe_user_sub c ON a.PHONE_NUMBER = c.PHONE_NUMBER
	       ]]>
	       WHERE 1=1
		<if test="emergency != null and emergency != ''">
			AND b.EMERGENCY = #{emergency}
		</if>
		<if test="hwStatus != null and hwStatus != ''">
			AND b.STATUS = #{hwStatus}
		</if>
		<if test="batStatus != null and batStatus != ''">
			AND b.BAT = #{batStatus}
		</if>
		<if test="userTimeS != null and userTimeS != ''">
		<![CDATA[
			AND date_format(a.INSERT_DATE,'%Y-%m-%d') >= #{userTimeS}
		]]>
		</if>
		<if test="userTimeE != null and userTimeE != ''">
	    <![CDATA[
	    	AND date_format(a.INSERT_DATE,'%Y-%m-%d') <= #{userTimeE}
	    ]]>
		</if>
		<if test="searchType != null and searchType != '' and totSearch != ''">
			<choose>
				<when test="searchType == 'name'">
					AND CAST(AES_DECRYPT(UNHEX(a.ENCRYPT_NAME), 'aycctv!1808')AS CHAR) LIKE CONCAT('%', #{totSearch},
					'%')
				</when>
				<when test="searchType == 'age'">
					AND YEAR(NOW())-LEFT(a.BIRTH,4)+1 = #{totSearch}
				</when>
				<when test="searchType == 'adres'">
					AND CAST(AES_DECRYPT(UNHEX(a.ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) LIKE CONCAT('%', #{totSearch},
					'%')
				</when>
				<when test="searchType == 'phon'">
					AND a.PHONE_NUMBER LIKE CONCAT('%', #{totSearch},
					'%')
				</when>
				<when test="searchType == 'sensor'">
					AND b.SENSOR_ID LIKE CONCAT('%', #{totSearch}, '%')
				</when>
				<when test="searchType == 'smart'">
					AND b.SMART_ID LIKE CONCAT('%', #{totSearch}, '%')
				</when>
			</choose>
		</if>
		<if test="lastTimeS != null and lastTimeS != ''">
	    <![CDATA[
	    	AND date_format(a.UPDATE_DATE,'%Y-%m-%d') >= #{lastTimeS}
	    ]]>
		</if>
		<if test="lastTimeE != null and lastTimeE != ''">
	    <![CDATA[
	    	AND date_format(a.UPDATE_DATE,'%Y-%m-%d') <= #{lastTimeE}
	    ]]>
		</if>
		ORDER BY a.PHONE_NUMBER
		LIMIT 1844674406757864665
		) aa ,
		(SELECT @vphoneNumber:='', @rowsnum:=0 FROM DUAL) ab		
		)ac 
    	,(SELECT @ROWNUM := #{firstIndex}) R
    	WHERE 1=1
    	AND cntNum='1'
	</select>

	<select id="getUser" parameterType="map" resultType="HashMap">
		<![CDATA[
	       SELECT 
	       ]]>
				CAST(AES_DECRYPT(UNHEX(a.ENCRYPT_NAME), 'aycctv!1808')AS CHAR) as name,
				<![CDATA[
				date_format(a.BIRTH,'%Y-%m-%d') as birth,
				a.PHONE_NUMBER as phoneNumber,
				]]>	
				CAST(AES_DECRYPT(UNHEX(a.ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) as address,
				<![CDATA[
				CASE a.APPROVAL
					WHEN 'N' THEN '비승인'
					WHEN 'Y' THEN '승인'
				END as approval,
				b.SMART_ID as smartId,
				b.SENSOR_ID as sensorId,				
				CASE b.STATUS
					WHEN '0' THEN 'ON'
					WHEN '1' THEN 'OFF'
				END as status,
				b.STATUS as chkStatus,
				CASE b.BAT
					WHEN '0' THEN '정상(대)'
					WHEN '1' THEN '정상(중)'
					WHEN '2' THEN '교체필요'
				END as bat,
				b.SENSOR_CONN as sensorConn,
				b.SMART_CONN as smartConn,
				b.BAT as chkBat,
				b.EMERGENCY as emergency,
				b.POINT_X as pointX,
				b.POINT_Y as pointY,
				b.M_POINT_X as mPointX,
				b.M_POINT_Y as mPointY,
				date_format(a.INSERT_DATE,'%Y-%m-%d %H:%i:%s')as insertDate,
				date_format(a.UPDATE_DATE,'%Y-%m-%d %H:%i:%s') as updateDate,
				CAST(AES_DECRYPT(UNHEX(c.S_PHONE_NUMBER), 'aycctv!1808')AS CHAR) as sPhoneNumber
			FROM girl_safe_user a
	        JOIN girl_safe_hw b on a.PHONE_NUMBER = b.PHONE_NUMBER
	        LEFT JOIN girl_safe_user_sub c ON a.PHONE_NUMBER = c.PHONE_NUMBER
	        WHERE 1=1
	    	AND a.PHONE_NUMBER = #{phoneNumber}
	     ]]>
	</select>

	<insert id="insertUser" parameterType="map">
		INSERT INTO girl_safe_user
		(
		PHONE_NUMBER,
		BIRTH,
		ENCRYPT_NAME,
		ENCRYPT_ADRES,
		APPROVAL,
		TOKEN_ID,
		INSERT_DATE,
		UPDATE_DATE
		) VALUES (
		#{phoneNumber},
		#{birth},
		HEX(AES_ENCRYPT(#{name},'aycctv!1808')),
		HEX(AES_ENCRYPT(#{address},'aycctv!1808')),
		'N',
		'',
		NOW(),
		NOW()
		)
		ON DUPLICATE KEY UPDATE
		PHONE_NUMBER = #{phoneNumber},
		BIRTH = #{birth},
		ENCRYPT_NAME = HEX(AES_ENCRYPT(#{name},'aycctv!1808')),
		ENCRYPT_ADRES = HEX(AES_ENCRYPT(#{address},'aycctv!1808')),
		UPDATE_DATE = NOW()
	</insert>
	
	<delete id="deleteUser" parameterType="map">
		DELETE FROM girl_safe_user
		 WHERE PHONE_NUMBER=#{phoneNumber};
	</delete>
	<delete id="deleteHw" parameterType="map">
		DELETE FROM girl_safe_hw
		 WHERE PHONE_NUMBER=#{phoneNumber};
	</delete>
	<delete id="deleteUserSub" parameterType="map">
		DELETE FROM girl_safe_user_sub
		 WHERE PHONE_NUMBER=#{phoneNumber};
	</delete>

	<select id="getHwInfo" parameterType="map" resultType="HashMap">
		SELECT
		a.PHONE_NUMBER as phoneNumber,
		b.SMART_ID as smartId,
		b.SENSOR_ID as sensorId,
		b.EMERGENCY as emergency,
		b.SENSOR_CONN as sensorConn,
		b.SMART_CONN as smartConn,
		b.POINT_X as pointX,
		b.POINT_Y as pointY,
		b.M_POINT_X as mPointX,
		b.M_POINT_Y as mPointY
		FROM girl_safe_user a
		JOIN girl_safe_hw b on a.PHONE_NUMBER = b.PHONE_NUMBER
		WHERE 1=1
		AND	b.SENSOR_ID = #{sensorId}
	</select>

	<insert id="insertHw" parameterType="map">
		INSERT INTO girl_safe_hw (
		SMART_ID,
		SENSOR_ID,
		PHONE_NUMBER,
		STATUS,
		BAT,
		EMERGENCY,
		SMART_CONN,
		SENSOR_CONN,
		STATUS_TIME,
		SENSOR_ACTION,
		INSERT_DATE,
		UPDATE_DATE
		) VALUES (
		#{smartId},
		#{sensorId},
		#{phoneNumber},
		0,
		0,
		0,
		0,
		0,
		10,
		1,
		NOW(),
		NOW()
		)
		ON DUPLICATE KEY UPDATE
		SMART_ID = #{smartId},
		SENSOR_ID = #{sensorId},
		PHONE_NUMBER = #{phoneNumber},
		UPDATE_DATE = NOW()
	</insert>

	<update id="updateSensorStat" parameterType="map">
		UPDATE girl_safe_hw
		SET
		STATUS=#{status},
		BAT=#{bat},
		<if test="pointX != null">
			POINT_Y=#{pointY},
			POINT_X=#{pointX},
		</if>
		UPDATE_DATE=NOW()
		WHERE SENSOR_ID=#{sensorId};
	</update>

	<update id="updateEmergency" parameterType="map">
		UPDATE girl_safe_hw
		SET
		EMERGENCY=#{emergency},
		<if test="pointX != null">
			POINT_Y=#{pointY},
			POINT_X=#{pointX},
		</if>
		UPDATE_DATE=NOW()
		WHERE SENSOR_ID=#{sensorId};
	</update>

	<update id="updateEventEnd" parameterType="map">
		UPDATE girl_safe_event
		SET
		END_YN = 'Y',
		END_TIME = NOW()
		WHERE NO = #{no}
	</update>

	<update id="updateApproval" parameterType="map">
		UPDATE girl_safe_user
		SET
		APPROVAL='Y',
		UPDATE_DATE=NOW()
		WHERE PHONE_NUMBER=#{phoneNumber};
	</update>

	<select id="getEventList" parameterType="map" resultType="HashMap">
		<![CDATA[		
	       SELECT 
				@ROWNUM := @ROWNUM + 1 AS num,
				NO as no,
				CASE LENGTH(PHONE_NUMBER)
					WHEN 11 THEN CONCAT(SUBSTR(PHONE_NUMBER,1,3),'-',SUBSTR(PHONE_NUMBER,4,4),'-',SUBSTR(PHONE_NUMBER,8,4))
					WHEN 10 THEN CONCAT(SUBSTR(PHONE_NUMBER,1,3),'-',SUBSTR(PHONE_NUMBER,4,3),'-',SUBSTR(PHONE_NUMBER,7,4))
					ELSE PHONE_NUMBER
				END phoneNumber,
				]]>
				CAST(AES_DECRYPT(UNHEX(ENCRYPT_NAME), 'aycctv!1808')AS CHAR) as name,
				<![CDATA[
				CONCAT(date_format(BIRTH,'%Y-%m-%d'),' (',(YEAR(NOW())-LEFT(BIRTH,4)+1),'세)') as birthAge,
				]]>
				CAST(AES_DECRYPT(UNHEX(ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) as address,
				<![CDATA[
				SMART_ID as smartId,
				SENSOR_ID as sensorId,
				DIVISION as division,
				REMARK as remark,
				REASON as reason,
				CASE END_YN
					WHEN 'N' THEN '발생'
					WHEN 'Y' THEN '종료'
				END as endYN,
				POINT_X as pointX,
				POINT_Y as pointY,
				date_format(START_TIME,'%Y-%m-%d %H:%i:%s') as startTime,
				date_format(END_TIME,'%Y-%m-%d %H:%i:%s') as endTime,
				date_format(INSERT_DATE,'%Y-%m-%d %H:%i:%s') as insertDate
			FROM girl_safe_event
	        ,(SELECT @ROWNUM := #{firstIndex}) R 
	        WHERE 1=1
	    ]]>
		<if test="eventTimeS != null and eventTimeS != ''">
	    <![CDATA[
	    	AND date_format(INSERT_DATE,'%Y-%m-%d') >= #{eventTimeS}
	    ]]>
		</if>
		<if test="eventTimeE != null and eventTimeE != ''">
	    <![CDATA[
	    	AND date_format(INSERT_DATE,'%Y-%m-%d') <= #{eventTimeE}
	    ]]>
		</if>
		<if test="endYN != null and endYN != ''">
			AND END_YN = #{endYN}
		</if>
		<if test="searchType != null and searchType != '' and totSearch != ''">
			<choose>
				<when test="searchType == 'name'">
					AND CAST(AES_DECRYPT(UNHEX(ENCRYPT_NAME), 'aycctv!1808')AS CHAR) LIKE CONCAT('%', #{totSearch}, '%')
				</when>
				<when test="searchType == 'age'">
					AND YEAR(NOW())-LEFT(BIRTH,4)+1 = #{totSearch}
				</when>
				<when test="searchType == 'phon'">
					AND PHONE_NUMBER LIKE CONCAT('%', #{totSearch}, '%')
				</when>
				<when test="searchType == 'adres'">
					AND CAST(AES_DECRYPT(UNHEX(ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) LIKE CONCAT('%', #{totSearch}, '%')
				</when>
				<when test="searchType == 'sensor'">
					AND SENSOR_ID LIKE CONCAT('%', #{totSearch}, '%')
				</when>
				<when test="searchType == 'smart'">
					AND SMART_ID LIKE CONCAT('%', #{totSearch}, '%')
				</when>
			</choose>
		</if>
		ORDER BY INSERT_DATE DESC
		<if test='recordCountPerPage != -1'>
			LIMIT #{firstIndex}, #{recordCountPerPage}
		</if>
	</select>

	<select id="getEventListCnt" parameterType="map" resultType="String">
		<![CDATA[		
	       SELECT 
				COUNT(*)
			FROM girl_safe_event a
	        WHERE 1=1
		]]>
		<if test="eventTimeS != null and eventTimeS != ''">
	    <![CDATA[
	    	AND date_format(INSERT_DATE,'%Y-%m-%d') >= #{eventTimeS}
	    ]]>
		</if>
		<if test="eventTimeE != null and eventTimeE != ''">
	    <![CDATA[
	    	AND date_format(INSERT_DATE,'%Y-%m-%d') <= #{eventTimeE}
	    ]]>
		</if>
		<if test="endYN != null and endYN != ''">
			AND END_YN = #{endYN}
		</if>
		<if test="searchType != null and searchType != '' and totSearch != ''">
			<choose>
				<when test="searchType == 'name'">
					AND CAST(AES_DECRYPT(UNHEX(ENCRYPT_NAME), 'aycctv!1808')AS CHAR) LIKE CONCAT('%', #{totSearch}, '%')
				</when>
				<when test="searchType == 'age'">
					AND YEAR(NOW())-LEFT(BIRTH,4)+1 = #{totSearch}
				</when>
				<when test="searchType == 'phon'">
					AND PHONE_NUMBER LIKE CONCAT('%', #{totSearch}, '%')
				</when>
				<when test="searchType == 'adres'">
					AND CAST(AES_DECRYPT(UNHEX(ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) LIKE CONCAT('%', #{totSearch}, '%')
				</when>
				<when test="searchType == 'sensor'">
					AND SENSOR_ID LIKE CONCAT('%', #{totSearch}, '%')
				</when>
			</choose>
		</if>
	</select>
	
	
	<select id="getEventDetail" parameterType="map" resultType="HashMap">
		<![CDATA[		
	       SELECT 
				CASE LENGTH(PHONE_NUMBER)
					WHEN 11 THEN CONCAT(SUBSTR(PHONE_NUMBER,1,3),'-',SUBSTR(PHONE_NUMBER,4,4),'-',SUBSTR(PHONE_NUMBER,8,4))
					WHEN 10 THEN CONCAT(SUBSTR(PHONE_NUMBER,1,3),'-',SUBSTR(PHONE_NUMBER,4,3),'-',SUBSTR(PHONE_NUMBER,7,4))
					ELSE PHONE_NUMBER
				END phoneNumber,
				NO as no,
				]]>
				CAST(AES_DECRYPT(UNHEX(ENCRYPT_NAME), 'aycctv!1808')AS CHAR) as name,
				CAST(AES_DECRYPT(UNHEX(ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) as address,
				<![CDATA[
				date_format(BIRTH,'%Y-%m-%d') as birth,
				SMART_ID as smartId,
				SENSOR_ID as sensorId,
				DIVISION as division,
				REMARK as remark,
				REASON as reason,
				CASE END_YN
					WHEN 'N' THEN '발생'
					WHEN 'Y' THEN '종료'
				END as endYN,
				POINT_X as pointX,
				POINT_Y as pointY,
				date_format(START_TIME,'%Y-%m-%d %H:%i:%s') as startTime,
				date_format(END_TIME,'%Y-%m-%d %H:%i:%s') as endTime,
				date_format(INSERT_DATE,'%Y-%m-%d %H:%i:%s') as insertDate
			FROM girl_safe_event
	        WHERE 1=1
	    	AND NO=#{no}
	    	]]>
	</select>

	<select id="getLastEvent" parameterType="map" resultType="HashMap">
		SELECT
		MAX(NO) as no
		FROM girl_safe_event
		WHERE 1=1
		AND SENSOR_ID = #{sensorId}
	</select>

	<update id="insertEvent" parameterType="map">
		INSERT INTO
		girl_safe_event
		(PHONE_NUMBER, ENCRYPT_NAME, BIRTH, ENCRYPT_ADRES,
		SENSOR_ID, SMART_ID, DIVISION,
		END_YN, POINT_X, POINT_Y, START_TIME,
		END_TIME, INSERT_DATE)
		SELECT
		a.PHONE_NUMBER,
		CAST(AES_DECRYPT(UNHEX(a.ENCRYPT_NAME), 'aycctv!1808')AS CHAR) as name,
		a.BIRTH,
		CAST(AES_DECRYPT(UNHEX(a.ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) as address,
		b.SENSOR_ID,
		b.SMART_ID,
		'SENSOR',
		'0',
		b.POINT_X,
		b.POINT_Y,
		NOW(),
		null,
		NOW()
		FROM girl_safe_user a
		JOIN girl_safe_hw b on
		a.PHONE_NUMBER = b.PHONE_NUMBER
		WHERE b.SENSOR_ID=#{sensorId};
	</update>

	<select id="getBoardList" parameterType="map" resultType="HashMap">
		<![CDATA[		
	       SELECT 
				@ROWNUM := @ROWNUM + 1 AS num,
				NO as no,
				TITLE as title,
				CONTENT as content,
				PUSH_YN as pushYN,
				COUNT as count,
				date_format(INSERT_DATE,'%Y-%m-%d') as insertDate,
				date_format(UPDATE_DATE,'%Y-%m-%d') as updateDate
	        FROM girl_safe_board,(SELECT @ROWNUM := #{firstIndex}) R 
	        WHERE 1=1
	    ]]>
		<if test="pushYN != null and pushYN != ''">
			AND PUSH_YN = #{pushYN}
		</if>
		<if test="boardInsertTimeS != null and boardInsertTimeS != ''">
	    <![CDATA[
	    	AND date_format(INSERT_DATE,'%Y-%m-%d') >= #{boardInsertTimeS}
	    ]]>
		</if>
		<if test="boardInsertTimeE != null and boardInsertTimeE != ''">
	    <![CDATA[
	    	AND date_format(INSERT_DATE,'%Y-%m-%d') <= #{boardInsertTimeE}
	    ]]>
		</if>
		<if test="searchType != null and searchType != ''">
			<choose>
				<when test="searchType == 'title'">
					AND TITLE LIKE CONCAT('%', #{totSearch}, '%')
				</when>
				<when test="searchType == 'cont'">
					AND CONTENT LIKE CONCAT('%', #{totSearch}, '%')
				</when>
			</choose>
		</if>
		ORDER BY INSERT_DATE DESC
		<if test='recordCountPerPage != -1'>
			LIMIT #{firstIndex}, #{recordCountPerPage}
		</if>
	</select>

	<select id="getBoardListCnt" parameterType="map" resultType="String">
		<![CDATA[		
	       SELECT 
				COUNT(*)
			FROM girl_safe_board
	        WHERE 1=1
	     ]]>
		<if test="pushYN != null and pushYN != ''">
			AND PUSH_YN = #{pushYN}
		</if>
		<if test="boardInsertTimeS != null and boardInsertTimeS != ''">
	    <![CDATA[
	    	AND date_format(INSERT_DATE,'%Y-%m-%d') >= #{boardInsertTimeS}
	    ]]>
		</if>
		<if test="boardInsertTimeE != null and boardInsertTimeE != ''">
	    <![CDATA[
	    	AND date_format(INSERT_DATE,'%Y-%m-%d') <= #{boardInsertTimeE}
	    ]]>
		</if>
		<if test="searchType != null and searchType != ''">
			<choose>
				<when test="searchType == 'title'">
					AND TITLE LIKE CONCAT('%', #{totSearch}, '%')
				</when>
				<when test="searchType == 'cont'">
					AND CONTENT LIKE CONCAT('%', #{totSearch}, '%')
				</when>
			</choose>
		</if>

	</select>

	<select id="getBoardOne" parameterType="map" resultType="HashMap">
		<![CDATA[		
	       SELECT 
	       		NO as no,
				TITLE as title,
				CONTENT as content,
				PUSH_YN as pushYN,
				COUNT as count,
				date_format(INSERT_DATE,'%Y-%m-%d') as insertDate,
				date_format(UPDATE_DATE,'%Y-%m-%d') as updateDate
	        FROM girl_safe_board 
	        WHERE 1=1
	        AND NO = #{no}
	    ]]>
	</select>

	<insert id="insertBoard" parameterType="map">
		INSERT INTO
		girl_safe_board
		(TITLE, CONTENT, PUSH_YN, COUNT, INSERT_DATE,
		UPDATE_DATE)
		VALUES
		(#{title},
		#{content},
		'N',
		0,
		NOW(),
		NOW())
	</insert>

	<update id="updateBoard" parameterType="map">
		UPDATE girl_safe_board
		SET
		<if test="title != null and title != ''">
			TITLE = #{title},
		</if>
		<if test="content != null and content != ''">
			CONTENT = #{content},
		</if>
		<if test="pushYN != null and pushYN != ''">
			PUSH_YN = #{pushYN},
		</if>
		<if test="count != null and count != ''">
			COUNT = COUNT + 1,
		</if>
		UPDATE_DATE = NOW()
		WHERE NO = #{no}
	</update>

	<select id="getDistrict" parameterType="map" resultType="HashMap">
		SELECT
		<if test="city != null and city != ''">
			ENCRYPT_CITY_NAME as cityName
		</if>
		<if test="gu != null and gu != ''">
			ENCRYPT_GU_NAME as guName
		</if>
		<if test="dong != null and dong != ''">
			ENCRYPT_DONG_NAME as dongName
		</if>
		FROM district
		WHERE 1=1
		<if test="city != null and city != ''">
			GROUP BY ENCRYPT_CITY_NAME
		</if>
		<if test="gu != null and gu != ''">
			GROUP BY ENCRYPT_GU_NAME
		</if>
	</select>

	<select id="getUserGuStatsList" parameterType="map" resultType="HashMap">
		SELECT
		dt.ENCRYPT_GU_NAME AS label,
		COUNT(a.PHONE_NUMBER) AS total,
		EXTRACT(year FROM a.INSERT_DATE) AS year,
		SUM(CASE WHEN EXTRACT(month
		FROM a.INSERT_DATE) = 1 THEN 1 ELSE 0 END) AS m1,
		SUM(CASE WHEN
		EXTRACT(month FROM a.INSERT_DATE) = 2 THEN 1 ELSE 0 END)
		AS m2,
		SUM(CASE WHEN EXTRACT(month FROM a.INSERT_DATE) = 3 THEN 1 ELSE 0 END)
		AS m3,
		SUM(CASE WHEN EXTRACT(month FROM a.INSERT_DATE) = 4 THEN 1 ELSE
		0 END)
		AS m4,
		SUM(CASE WHEN EXTRACT(month FROM a.INSERT_DATE) = 5 THEN 1
		ELSE 0 END) AS m5,
		SUM(CASE WHEN EXTRACT(month FROM a.INSERT_DATE) = 6
		THEN 1 ELSE 0 END)
		AS m6,
		SUM(CASE WHEN EXTRACT(month FROM
		a.INSERT_DATE) = 7 THEN 1 ELSE 0 END) AS m7,
		SUM(CASE WHEN
		EXTRACT(month FROM a.INSERT_DATE) = 8 THEN 1 ELSE 0 END)
		AS m8,
		SUM(CASE WHEN EXTRACT(month FROM a.INSERT_DATE) = 9 THEN 1 ELSE 0 END)
		AS m9,
		SUM(CASE WHEN EXTRACT(month FROM a.INSERT_DATE) = 10 THEN 1 ELSE
		0
		END) AS m10,
		SUM(CASE WHEN EXTRACT(month FROM a.INSERT_DATE) = 11 THEN
		1 ELSE 0 END) AS
		m11,
		SUM(CASE WHEN EXTRACT(month FROM a.INSERT_DATE) =
		12 THEN 1 ELSE 0 END) AS m12
		FROM (SELECT ENCRYPT_GU_NAME FROM district
		GROUP BY ENCRYPT_GU_NAME)
		AS dt
		LEFT JOIN (
		SELECT
		CAST(AES_DECRYPT(UNHEX(u.ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) as ENCRYPT_ADRES,
		u.PHONE_NUMBER,
		u.INSERT_DATE
		FROM girl_safe_user u
		JOIN girl_safe_hw b
		on u.PHONE_NUMBER = b.PHONE_NUMBER
		LEFT JOIN (
		select *
		from
		girl_safe_user_sub LIMIT 1) c
		ON u.PHONE_NUMBER = c.PHONE_NUMBER ,
		(SELECT @ROWNUM := 0) R
		) a
		ON a.ENCRYPT_ADRES LIKE CONCAT('%',
		dt.ENCRYPT_GU_NAME, '%')
		<if test="year != null and year != ''">
			WHERE EXTRACT(year FROM a.INSERT_DATE) = #{year}
		</if>
		GROUP BY dt.ENCRYPT_GU_NAME, EXTRACT(year FROM a.INSERT_DATE)
		ORDER BY
		dt.ENCRYPT_GU_NAME ASC
		<if test='recordCountPerPage != -1'>
			LIMIT #{firstIndex}, #{recordCountPerPage}
		</if>
	</select>

	<select id="getUserGuStatsListCnt" parameterType="map"
		resultType="String">
		SELECT
		COUNT(a.ENCRYPT_ADRES)
		FROM (
		SELECT
		CAST(AES_DECRYPT(UNHEX(u.ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) as ENCRYPT_ADRES
		FROM girl_safe_user u
		JOIN district d
		ON CAST(AES_DECRYPT(UNHEX(u.ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) LIKE CONCAT('%', d.ENCRYPT_GU_NAME, '%')
		GROUP BY d.ENCRYPT_GU_NAME
		) AS a
	</select>

	<select id="getUserDongStatsList" parameterType="map"
		resultType="HashMap">
		SELECT
		dt.ENCRYPT_DONG_NAME AS label,
		COUNT(a.PHONE_NUMBER) AS total,
		EXTRACT(year FROM a.INSERT_DATE) AS year,
		SUM(CASE WHEN EXTRACT(month
		FROM a.INSERT_DATE) = 1 THEN 1 ELSE 0 END) AS m1,
		SUM(CASE WHEN
		EXTRACT(month FROM a.INSERT_DATE) = 2 THEN 1 ELSE 0 END)
		AS m2,
		SUM(CASE WHEN EXTRACT(month FROM a.INSERT_DATE) = 3 THEN 1 ELSE 0 END)
		AS m3,
		SUM(CASE WHEN EXTRACT(month FROM a.INSERT_DATE) = 4 THEN 1 ELSE
		0 END)
		AS m4,
		SUM(CASE WHEN EXTRACT(month FROM a.INSERT_DATE) = 5 THEN 1
		ELSE 0 END) AS m5,
		SUM(CASE WHEN EXTRACT(month FROM a.INSERT_DATE) = 6
		THEN 1 ELSE 0 END)
		AS m6,
		SUM(CASE WHEN EXTRACT(month FROM
		a.INSERT_DATE) = 7 THEN 1 ELSE 0 END) AS m7,
		SUM(CASE WHEN
		EXTRACT(month FROM a.INSERT_DATE) = 8 THEN 1 ELSE 0 END)
		AS m8,
		SUM(CASE WHEN EXTRACT(month FROM a.INSERT_DATE) = 9 THEN 1 ELSE 0 END)
		AS m9,
		SUM(CASE WHEN EXTRACT(month FROM a.INSERT_DATE) = 10 THEN 1 ELSE
		0
		END) AS m10,
		SUM(CASE WHEN EXTRACT(month FROM a.INSERT_DATE) = 11 THEN
		1 ELSE 0 END) AS
		m11,
		SUM(CASE WHEN EXTRACT(month FROM a.INSERT_DATE) =
		12 THEN 1 ELSE 0 END) AS m12
		FROM district AS dt
		LEFT JOIN (
		SELECT
		CAST(AES_DECRYPT(UNHEX(u.ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) as ENCRYPT_ADRES,
		u.PHONE_NUMBER,
		u.INSERT_DATE
		FROM girl_safe_user u
		JOIN girl_safe_hw b
		on u.PHONE_NUMBER = b.PHONE_NUMBER
		LEFT JOIN (
		select *
		from
		girl_safe_user_sub LIMIT 1) c
		ON u.PHONE_NUMBER = c.PHONE_NUMBER ,
		(SELECT @ROWNUM := 0) R
		) a
		ON a.ENCRYPT_ADRES LIKE CONCAT('%',
		dt.ENCRYPT_DONG_NAME, '%')
		<if test="year != null and year != ''">
			WHERE EXTRACT(year FROM a.INSERT_DATE) = #{year}
		</if>
		GROUP BY dt.ENCRYPT_DONG_NAME, EXTRACT(year FROM a.INSERT_DATE)
		ORDER
		BY dt.ENCRYPT_DONG_NAME ASC
		<if test='recordCountPerPage != -1'>
			LIMIT #{firstIndex}, #{recordCountPerPage}
		</if>
	</select>

	<select id="getUserDongStatsListCnt" parameterType="map"
		resultType="String">
		SELECT
		COUNT(a.ENCRYPT_ADRES)
		FROM (
		SELECT
		CAST(AES_DECRYPT(UNHEX(u.ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) as ENCRYPT_ADRES
		FROM girl_safe_user u
		JOIN district d
		ON CAST(AES_DECRYPT(UNHEX(u.ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) LIKE CONCAT('%', d.ENCRYPT_DONG_NAME, '%')
		GROUP BY d.ENCRYPT_DONG_NAME
		) AS a
	</select>

	<select id="getEventGuStatsList" parameterType="map" resultType="HashMap">
		SELECT
		dt.ENCRYPT_GU_NAME AS label,
		COUNT(a.PHONE_NUMBER) AS total,
		EXTRACT(year FROM a.INSERT_DATE) AS year,
		SUM(CASE WHEN EXTRACT(month
		FROM a.INSERT_DATE) = 1 THEN 1 ELSE 0 END) AS m1,
		SUM(CASE WHEN
		EXTRACT(month FROM a.INSERT_DATE) = 2 THEN 1 ELSE 0 END)
		AS m2,
		SUM(CASE WHEN EXTRACT(month FROM a.INSERT_DATE) = 3 THEN 1 ELSE 0 END)
		AS m3,
		SUM(CASE WHEN EXTRACT(month FROM a.INSERT_DATE) = 4 THEN 1 ELSE
		0 END)
		AS m4,
		SUM(CASE WHEN EXTRACT(month FROM a.INSERT_DATE) = 5 THEN 1
		ELSE 0 END) AS m5,
		SUM(CASE WHEN EXTRACT(month FROM a.INSERT_DATE) = 6
		THEN 1 ELSE 0 END)
		AS m6,
		SUM(CASE WHEN EXTRACT(month FROM
		a.INSERT_DATE) = 7 THEN 1 ELSE 0 END) AS m7,
		SUM(CASE WHEN
		EXTRACT(month FROM a.INSERT_DATE) = 8 THEN 1 ELSE 0 END)
		AS m8,
		SUM(CASE WHEN EXTRACT(month FROM a.INSERT_DATE) = 9 THEN 1 ELSE 0 END)
		AS m9,
		SUM(CASE WHEN EXTRACT(month FROM a.INSERT_DATE) = 10 THEN 1 ELSE
		0
		END) AS m10,
		SUM(CASE WHEN EXTRACT(month FROM a.INSERT_DATE) = 11 THEN
		1 ELSE 0 END) AS
		m11,
		SUM(CASE WHEN EXTRACT(month FROM a.INSERT_DATE) =
		12 THEN 1 ELSE 0 END) AS m12
		FROM (SELECT ENCRYPT_GU_NAME FROM district
		GROUP BY ENCRYPT_GU_NAME)
		AS dt
		LEFT JOIN (SELECT CAST(AES_DECRYPT(UNHEX(ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) as ENCRYPT_ADRES,
		PHONE_NUMBER, INSERT_DATE FROM
		girl_safe_event) a
		ON a.ENCRYPT_ADRES LIKE CONCAT('%', dt.ENCRYPT_GU_NAME, '%')
		<if test="year != null and year != ''">
			WHERE EXTRACT(year FROM a.INSERT_DATE) = #{year}
		</if>
		GROUP BY dt.ENCRYPT_GU_NAME, EXTRACT(year FROM a.INSERT_DATE)
		ORDER BY
		dt.ENCRYPT_GU_NAME ASC
		<if test='recordCountPerPage != -1'>
			LIMIT #{firstIndex}, #{recordCountPerPage}
		</if>
	</select>

	<select id="getEventGuStatsListCnt" parameterType="map"
		resultType="String">
		SELECT
		COUNT(a.ENCRYPT_ADRES)
		FROM (
		SELECT
		CAST(AES_DECRYPT(UNHEX(e.ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) as ENCRYPT_ADRES
		FROM girl_safe_event e
		JOIN district d
		ON CAST(AES_DECRYPT(UNHEX(e.ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) LIKE CONCAT('%', d.ENCRYPT_GU_NAME, '%')
		GROUP BY d.ENCRYPT_GU_NAME
		) AS a
	</select>

	<select id="getEventDongStatsList" parameterType="map"
		resultType="HashMap">
		SELECT
		dt.ENCRYPT_DONG_NAME AS label,
		COUNT(a.PHONE_NUMBER) AS total,
		EXTRACT(year FROM a.INSERT_DATE) AS year,
		SUM(CASE WHEN EXTRACT(month
		FROM a.INSERT_DATE) = 1 THEN 1 ELSE 0 END) AS m1,
		SUM(CASE WHEN
		EXTRACT(month FROM a.INSERT_DATE) = 2 THEN 1 ELSE 0 END)
		AS m2,
		SUM(CASE WHEN EXTRACT(month FROM a.INSERT_DATE) = 3 THEN 1 ELSE 0 END)
		AS m3,
		SUM(CASE WHEN EXTRACT(month FROM a.INSERT_DATE) = 4 THEN 1 ELSE
		0 END)
		AS m4,
		SUM(CASE WHEN EXTRACT(month FROM a.INSERT_DATE) = 5 THEN 1
		ELSE 0 END) AS m5,
		SUM(CASE WHEN EXTRACT(month FROM a.INSERT_DATE) = 6
		THEN 1 ELSE 0 END)
		AS m6,
		SUM(CASE WHEN EXTRACT(month FROM
		a.INSERT_DATE) = 7 THEN 1 ELSE 0 END) AS m7,
		SUM(CASE WHEN
		EXTRACT(month FROM a.INSERT_DATE) = 8 THEN 1 ELSE 0 END)
		AS m8,
		SUM(CASE WHEN EXTRACT(month FROM a.INSERT_DATE) = 9 THEN 1 ELSE 0 END)
		AS m9,
		SUM(CASE WHEN EXTRACT(month FROM a.INSERT_DATE) = 10 THEN 1 ELSE
		0
		END) AS m10,
		SUM(CASE WHEN EXTRACT(month FROM a.INSERT_DATE) = 11 THEN
		1 ELSE 0 END) AS
		m11,
		SUM(CASE WHEN EXTRACT(month FROM a.INSERT_DATE) =
		12 THEN 1 ELSE 0 END) AS m12
		FROM district AS dt
		LEFT JOIN (SELECT
		CAST(AES_DECRYPT(UNHEX(ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) as ENCRYPT_ADRES, PHONE_NUMBER, INSERT_DATE FROM
		girl_safe_event) a
		ON a.ENCRYPT_ADRES LIKE CONCAT('%', dt.ENCRYPT_DONG_NAME, '%')
		<if test="year != null and year != ''">
			WHERE EXTRACT(year FROM a.INSERT_DATE) = #{year}
		</if>
		GROUP BY dt.ENCRYPT_DONG_NAME, EXTRACT(year FROM a.INSERT_DATE)
		ORDER
		BY dt.ENCRYPT_DONG_NAME ASC
		<if test='recordCountPerPage != -1'>
			LIMIT #{firstIndex}, #{recordCountPerPage}
		</if>
	</select>

	<select id="getEventDongStatsListCnt" parameterType="map"
		resultType="String">
		SELECT
		COUNT(a.ENCRYPT_ADRES)
		FROM (
		SELECT
		CAST(AES_DECRYPT(UNHEX(e.ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) as ENCRYPT_ADRES
		FROM girl_safe_event e
		JOIN district d
		ON CAST(AES_DECRYPT(UNHEX(e.ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) LIKE CONCAT('%', d.ENCRYPT_DONG_NAME, '%')
		GROUP BY d.ENCRYPT_DONG_NAME
		) AS a
	</select>

	<select id="getEventHwStatsList" parameterType="map" resultType="HashMap">
		SELECT
		DIVISION AS label,
		COUNT(PHONE_NUMBER) AS total,
		EXTRACT(year FROM
		INSERT_DATE) AS year,
		SUM(CASE WHEN EXTRACT(month FROM INSERT_DATE) = 1
		THEN 1 ELSE 0 END) AS m1,
		SUM(CASE WHEN EXTRACT(month FROM INSERT_DATE)
		= 2 THEN 1 ELSE 0 END)
		AS m2,
		SUM(CASE WHEN EXTRACT(month FROM
		INSERT_DATE) = 3 THEN 1 ELSE 0 END) AS m3,
		SUM(CASE WHEN EXTRACT(month
		FROM INSERT_DATE) = 4 THEN 1 ELSE 0 END)
		AS m4,
		SUM(CASE WHEN
		EXTRACT(month FROM INSERT_DATE) = 5 THEN 1 ELSE 0 END) AS m5,
		SUM(CASE
		WHEN EXTRACT(month FROM INSERT_DATE) = 6 THEN 1 ELSE 0 END)
		AS m6,
		SUM(CASE WHEN EXTRACT(month FROM INSERT_DATE) = 7 THEN 1 ELSE 0 END)
		AS m7,
		SUM(CASE WHEN EXTRACT(month FROM INSERT_DATE) = 8 THEN 1 ELSE 0
		END)
		AS m8,
		SUM(CASE WHEN EXTRACT(month FROM INSERT_DATE) = 9 THEN 1
		ELSE 0 END) AS m9,
		SUM(CASE WHEN EXTRACT(month FROM INSERT_DATE) = 10
		THEN 1 ELSE 0 END)
		AS m10,
		SUM(CASE WHEN EXTRACT(month FROM INSERT_DATE)
		= 11 THEN 1 ELSE 0 END) AS m11,
		SUM(CASE WHEN EXTRACT(month FROM
		INSERT_DATE) = 12 THEN 1 ELSE 0 END)
		AS m12
		FROM girl_safe_event
		<if test="year != null and year != ''">
			WHERE EXTRACT(year FROM INSERT_DATE) = #{year}
		</if>
		GROUP BY DIVISION, EXTRACT(year FROM INSERT_DATE)
		ORDER BY DIVISION ASC
		<if test='recordCountPerPage != -1'>
			LIMIT #{firstIndex}, #{recordCountPerPage}
		</if>
	</select>

	<select id="getEventHwStatsListCnt" parameterType="map"
		resultType="String">
		SELECT
		COUNT(e.DIVISION)
		FROM (SELECT DIVISION FROM
		girl_safe_event GROUP BY DIVISION) AS e
	</select>

	<select id="getLogStatsList" parameterType="map" resultType="HashMap">
		SELECT
		l.CONTENT AS label,
		COUNT(l.CONTENT) AS total,
		EXTRACT(year FROM
		l.CREATE_DATE) AS year,
		SUM(CASE WHEN EXTRACT(month FROM l.CREATE_DATE)
		= 1 THEN 1 ELSE 0 END) AS m1,
		SUM(CASE WHEN EXTRACT(month FROM
		l.CREATE_DATE) = 2 THEN 1 ELSE 0 END)
		AS m2,
		SUM(CASE WHEN EXTRACT(month
		FROM l.CREATE_DATE) = 3 THEN 1 ELSE 0 END) AS m3,
		SUM(CASE WHEN
		EXTRACT(month FROM l.CREATE_DATE) = 4 THEN 1 ELSE 0 END)
		AS m4,
		SUM(CASE WHEN EXTRACT(month FROM l.CREATE_DATE) = 5 THEN 1 ELSE 0 END)
		AS m5,
		SUM(CASE WHEN EXTRACT(month FROM l.CREATE_DATE) = 6 THEN 1 ELSE
		0 END)
		AS m6,
		SUM(CASE WHEN EXTRACT(month FROM l.CREATE_DATE) = 7 THEN 1
		ELSE 0 END) AS m7,
		SUM(CASE WHEN EXTRACT(month FROM l.CREATE_DATE) = 8
		THEN 1 ELSE 0 END)
		AS m8,
		SUM(CASE WHEN EXTRACT(month FROM
		l.CREATE_DATE) = 9 THEN 1 ELSE 0 END) AS m9,
		SUM(CASE WHEN
		EXTRACT(month FROM l.CREATE_DATE) = 10 THEN 1 ELSE 0
		END) AS m10,
		SUM(CASE WHEN EXTRACT(month FROM l.CREATE_DATE) = 11 THEN 1 ELSE 0
		END) AS
		m11,
		SUM(CASE WHEN EXTRACT(month FROM l.CREATE_DATE) = 12 THEN 1
		ELSE 0 END) AS m12
		FROM (SELECT
		LOG_TYPE,
		CONTENT,
		CREATE_DATE
		FROM
		girl_safe_log
		WHERE LOG_TYPE = 'ACCESSPAGE') AS l
		<if test="year != null and year != ''">
			WHERE EXTRACT(year FROM l.CREATE_DATE) = #{year}
		</if>
		GROUP BY l.CONTENT, EXTRACT(year FROM l.CREATE_DATE)
		ORDER BY l.CONTENT
		ASC
		<if test='recordCountPerPage != -1'>
			LIMIT #{firstIndex}, #{recordCountPerPage}
		</if>
	</select>

	<select id="getLogStatsListCnt" parameterType="map" resultType="String">
		SELECT
		COUNT(e.CONTENT)
		FROM (SELECT
		LOG_TYPE,
		CONTENT,
		CREATE_DATE
		FROM
		girl_safe_log
		WHERE LOG_TYPE = 'ACCESSPAGE'
		GROUP BY CONTENT,
		EXTRACT(year FROM CREATE_DATE)) AS e
		<if test="year != null and year != ''">
			WHERE EXTRACT(year FROM e.CREATE_DATE) = #{year}
		</if>
	</select>

	<select id="getEventStatsYearList" parameterType="map"
		resultType="HashMap">
		SELECT EXTRACT(year FROM INSERT_DATE) AS label FROM
		girl_safe_event
		GROUP BY EXTRACT(year FROM INSERT_DATE)
	</select>

	<select id="getUserStatsYearList" parameterType="map"
		resultType="HashMap">
		SELECT EXTRACT(year FROM INSERT_DATE) AS label FROM
		girl_safe_user
		GROUP BY EXTRACT(year FROM INSERT_DATE)
	</select>

	<select id="getLogStatsYearList" parameterType="map" resultType="HashMap">
		SELECT EXTRACT(year FROM create_date) AS label FROM girl_safe_log
		GROUP BY EXTRACT(year FROM create_date)
	</select>


	<select id="smsUser" parameterType="map" resultType="HashMap">
		SELECT
		CAST(AES_DECRYPT(UNHEX(a.ENCRYPT_NAME), 'aycctv!1808')AS CHAR) as name,
		CAST(AES_DECRYPT(UNHEX(c.S_ENCRYPT_NAME), 'aycctv!1808')AS CHAR) as sName,
		CAST(AES_DECRYPT(UNHEX(c.S_PHONE_NUMBER), 'aycctv!1808')AS CHAR) as sPhoneNumber,
		b.SENSOR_CONN as sensorConn,
		b.SMART_CONN as smartConn
		FROM girl_safe_user a
		JOIN girl_safe_hw b ON
		a.PHONE_NUMBER = b.PHONE_NUMBER
		JOIN girl_safe_user_sub c ON
		a.PHONE_NUMBER = c.PHONE_NUMBER
		WHERE b.SENSOR_ID = #{sensorId}
	</select>

	<select id="getEvent" parameterType="map" resultType="HashMap">
		SELECT
		CAST(AES_DECRYPT(UNHEX(a.ENCRYPT_NAME), 'aycctv!1808')AS CHAR) as name,
		CAST(AES_DECRYPT(UNHEX(a.ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) as adres,
		a.PHONE_NUMBER as phoneNumber,
		a.BIRTH as birth,
		a.PICTURE as picture,
		b.POINT_X as pointX,
		b.POINT_Y as pointY,
		b.M_POINT_X as mPointX,
		b.M_POINT_Y as mPointY,
		b.SENSOR_CONN as sensorConn,
		b.SMART_CONN as smartConn,
		b.EMERGENCY as emergency,
		CAST(AES_DECRYPT(UNHEX(c.S_ENCRYPT_NAME), 'aycctv!1808')AS CHAR) as sName,
		CAST(AES_DECRYPT(UNHEX(c.S_PHONE_NUMBER), 'aycctv!1808')AS CHAR) as sPhoneNumber,
		c.RELATIONS as realation,
		now() as time,
		d.NO as no
		FROM girl_safe_user a
		JOIN girl_safe_hw b ON a.PHONE_NUMBER =
		b.PHONE_NUMBER
		LEFT JOIN girl_safe_user_sub c ON a.PHONE_NUMBER =
		c.PHONE_NUMBER
		JOIN girl_safe_event d ON a.PHONE_NUMBER =
		d.PHONE_NUMBER
		WHERE 1=1 
		AND b.SENSOR_ID = #{sensorId}
		AND END_YN='N'
	</select>

	
	<select id="getClearEvent" parameterType="map" resultType="HashMap">
		SELECT
		CAST(AES_DECRYPT(UNHEX(a.ENCRYPT_NAME), 'aycctv!1808')AS CHAR) as name,
		CAST(AES_DECRYPT(UNHEX(a.ENCRYPT_ADRES), 'aycctv!1808')AS CHAR) as adres,
		a.PHONE_NUMBER as phoneNumber,
		a.BIRTH as birth,
		a.PICTURE as picture,
		b.POINT_X as pointX,
		b.POINT_Y as pointY,
		b.M_POINT_X as mPointX,
		b.M_POINT_Y as mPointY,
		b.SENSOR_CONN as sensorConn,
		b.SMART_CONN as smartConn,
		b.EMERGENCY as emergency,
		CAST(AES_DECRYPT(UNHEX(c.S_ENCRYPT_NAME), 'aycctv!1808')AS CHAR) as sName,
		CAST(AES_DECRYPT(UNHEX(c.S_PHONE_NUMBER), 'aycctv!1808')AS CHAR) as sPhoneNumber,
		c.RELATIONS as realation,
		now() as time,
		MAX(d.NO) as no
		FROM girl_safe_user a
		JOIN girl_safe_hw b ON a.PHONE_NUMBER =
		b.PHONE_NUMBER
		LEFT JOIN girl_safe_user_sub c ON a.PHONE_NUMBER =
		c.PHONE_NUMBER
		JOIN girl_safe_event d ON a.PHONE_NUMBER =
		d.PHONE_NUMBER
		WHERE 1=1 
		AND b.SENSOR_ID = #{sensorId}
	</select>

	<select id="isSensorId" parameterType="map" resultType="HashMap">
		SELECT
		COUNT(SENSOR_ID) as cnt
		FROM girl_safe_hw
		WHERE SENSOR_ID = #{sensorId}
	</select>

	<select id="isSmartId" parameterType="map" resultType="HashMap">
		SELECT
		COUNT(SMART_ID) as cnt
		FROM girl_safe_hw
		WHERE SMART_ID = #{smartId}
	</select>

	<select id="isPhoneNumber" parameterType="map" resultType="HashMap">
		SELECT
		COUNT(PHONE_NUMBER) as cnt
		FROM girl_safe_user
		WHERE PHONE_NUMBER = #{phoneNumber}
	</select>

	<select id="getAdminList" parameterType="map" resultType="HashMap">
		<![CDATA[		
	       SELECT 
				@ROWNUM := @ROWNUM + 1 AS num,
				a.SEQ_NO as seqNo,
				a.ID as id,
				a.PWD as password,
				a.NAME as name,
				a.BIRTHDAY as birthday,
				a.PHONE_NO as phoneNumber,
				a.EMAIL as email,
				a.ADDRESS as address,
				a.RANK as rank,
				date_format(a.CREATE_DATE,'%Y-%m-%d %H:%i:%s')as insertDate,
				date_format(a.UPD_DATE,'%Y-%m-%d %H:%i:%s') as updateDate 
			FROM admin a
	        ,(SELECT @ROWNUM := #{firstIndex}) R 
	        WHERE 1=1
	     ]]>
		<if test="userTimeS != null and userTimeS != ''">
	    <![CDATA[
	    	AND a.CREATE_DATE >= #{userTimeS}
	    ]]>
		</if>
		<if test="userTimeE != null and userTimeE != ''">
	    <![CDATA[
	    	AND a.CREATE_DATE <= #{userTimeE}
	    ]]>
		</if>
		<if test='recordCountPerPage != -1'>
			LIMIT #{firstIndex}, #{recordCountPerPage}
		</if>
	</select>
	<select id="getAdminListCnt" parameterType="map" resultType="String">
		<![CDATA[
	         SELECT 
				COUNT(*)
			FROM admin a
			WHERE 1=1
	     ]]>
		<if test="userTimeS != null and userTimeS != ''">
	    <![CDATA[
	    	AND a.CREATE_DATE >= #{userTimeS}
	    ]]>
		</if>
		<if test="userTimeE != null and userTimeE != ''">
	    <![CDATA[
	    	AND a.CREATE_DATE <= #{userTimeE}
	    ]]>
		</if>
	</select>

	<insert id="insertAdmin" parameterType="map">
		<![CDATA[
		INSERT INTO admin (
			ID,
			PWD,
			NAME,
			BIRTHDAY,
			PHONE_NO,
			EMAIL,
			ADDRESS,
			RANK,
			LOGIN_FAIL_COUNT,
			CREATE_DATE,
			UPD_DATE
		) VALUES (
			#{id},
			#{password},
			#{name},
			#{birthday},
			#{phoneNumber},
			#{email},
			#{address},
			#{rank},
			0,
			NOW(),
			NOW()
		)
		]]>
	</insert>

	<update id="updateAdmin" parameterType="map">
		<![CDATA[
		UPDATE admin
		SET
		]]>
		<if test="password != null">
			PWD=#{password},
		</if>
		<![CDATA[
		NAME=#{name},
		BIRTHDAY=#{birthday},
		PHONE_NO=#{phoneNumber},
		EMAIL=#{email},
		ADDRESS=#{address},
		RANK=#{rank},
		UPD_DATE=NOW()
		WHERE SEQ_NO=#{seqNo};
		]]>
	</update>

	<select id="getLoginFailCount" parameterType="map" resultType="String">
		<![CDATA[		
	       SELECT 
				LOGIN_FAIL_COUNT
			FROM admin
	        WHERE ID=#{id};
	     ]]>
	</select>

	<update id="updateLoginFailCount" parameterType="map">
		<![CDATA[
			UPDATE admin
			SET
			]]>
		<if test='checkFlag == "X"'>
			LOGIN_FAIL_COUNT=LOGIN_FAIL_COUNT+1
		</if>
		<if test='checkFlag == "O"'>
			LOGIN_FAIL_COUNT=0
		</if>
			<![CDATA[
			WHERE ID=#{id};
		]]>
	</update>

	<select id="passCheck" parameterType="map" resultType="String">
		<![CDATA[
	       SELECT
	       		COUNT(*)
			FROM admin
			WHERE 1=1
			AND id = #{userId}
			AND pwd = #{orgPassword}
			AND deleted = 'N'
	     ]]>
	</select>

	<update id="updatePassword" parameterType="map">
		<![CDATA[
			UPDATE admin
			   SET last_pwd_update_date = DATE_FORMAT(now(),'%Y%m%d%H%i%s')
		]]>
		<if test='passFlag != "later"'><![CDATA[
				, pwd = #{newPassword}
		]]></if>
		<![CDATA[
			WHERE id = #{userId}
		]]>
		<if test='passFlag != "later"'><![CDATA[
			AND pwd = #{orgPassword}
		]]></if>
		<![CDATA[
			AND deleted = 'N'
 		]]>
	</update>

	<insert id="mobileInsert" parameterType="map">
		INSERT INTO
		police_mobile_list (
		MOBILE_ID,
		MOBILE_TYPE,
		MAC_ADDRESS,
		DESCRIPTION,
		IP_DOMAIN,
		UPDATE_DATE
		) VALUES (
		#{mobileID},
		#{mobileType},
		#{macAddress},
		#{description},
		#{ipDomain},
		NOW()
		)
		ON DUPLICATE KEY UPDATE
		MOBILE_ID = #{mobileID},
		MOBILE_TYPE = #{mobileType},
		MAC_ADDRESS = #{macAddress},
		DESCRIPTION = #{description},
		IP_DOMAIN = #{ipDomain},
		UPDATE_DATE = NOW()
	</insert>

	<insert id="eventResult" parameterType="map">
		INSERT INTO
		police_mobile_list (
		MOBILE_ID,
		MOBILE_TYPE,
		MAC_ADDRESS,
		DESCRIPTION,
		IP_DOMAIN,
		UPDATE_DATE
		) VALUES (
		#{mobileID},
		#{mobileType},
		#{macAddress},
		#{description},
		#{ipDomain},
		NOW()
		)
		ON DUPLICATE KEY UPDATE
		MOBILE_ID = #{mobileID},
		MOBILE_TYPE = #{mobileType},
		MAC_ADDRESS = #{macAddress},
		DESCRIPTION = #{description},
		IP_DOMAIN = #{ipDomain},
		UPDATE_DATE = NOW()
	</insert>
</mapper>